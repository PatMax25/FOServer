

int week_patch=1;
int doubleloot=1;
bool dropchance(float chance)
{
	if(chance==0)
	return false;
	if(Random(0,100)<chance)
	return true;
	
	return false;
	
}

bool can_tc_modoc=false;
bool can_tc_klamath=false;
bool can_tc_gecko=false;
bool can_tc_bh=false;
bool can_tc_redding=false;
bool can_tc_den=false;
bool can_tc_necro=false;
bool can_tc_reno=false;

uint when_tc_modoc=0;
uint when_tc_klamath=0;
uint when_tc_gecko=0;
uint when_tc_bh=0;
uint when_tc_redding=0;
uint when_tc_den=0;
uint when_tc_necro=0;
uint when_tc_reno

import bool AddMiscPlane(Critter&npc,uint priority,uint waitMinute,string@funcName)from"npc_planes";
import bool AddMiscPlane(Critter&npc,uint priority,int identifier,uint identifierExt,uint waitSecond,string@funcName)from"npc_planes";
import bool AddWalkPlane(Critter&npc,uint priority,uint16 hexX,uint16 hexY,uint8 dir,bool run,uint cut)from"npc_planes";
import bool AddWalkPlane(Critter&npc,uint priority,int identifier,uint identifierExt,uint16 hexX,uint16 hexY,uint8 dir,bool run,uint cut)from"npc_planes";
import bool AddAttackPlane(Critter&npc,uint priority,Critter&target)from"npc_planes";
import bool AddAttackPlane(Critter&npc,uint priority,uint critId)from"npc_planes";
import bool AddAttackPlane(Critter&npc,uint priority,Critter&target,int minHp)from"npc_planes";
import bool AddAttackPlane(Critter&npc,uint priority,uint critId,int minHp)from"npc_planes";
import bool AddAttackPlane(Critter&npc,uint priority,Critter&target,bool run)from"npc_planes";
import bool AddPickPlane(Critter&npc,uint priority,uint16 hexX,uint16 hexY,uint16 protoId,uint useItemId,bool toOpen)from"npc_planes";
import bool AddPickPlane(Critter&npc,uint priority,Item@item,uint useItemId,bool toOpen)from"npc_planes";
import bool AddPickPlane(Critter&npc,uint priority,Item@item,uint useItemId,bool toOpen,bool run)from"npc_planes";
import bool AddHealCritterPlane(Critter&npc,uint priority,Critter@target,bool run)from"npc_planes";
import bool AddDoctorCritterPlane(Critter&npc,uint priority,Critter@target,bool run)from"npc_planes";

import uint EraseAttackPlane(Critter&npc,uint priority,Critter&target)from"npc_planes";
import uint EraseAttackPlane(Critter&npc,uint priority,uint critId)from"npc_planes";                                                                                                                                                                                                      

void critter_init(Critter&mob,bool firstTime)
{
	mob.SetEvent((0),"_MobIdle");
	mob.SetEvent((2),"_MobDead");
	mob.ParamBase[(77)]=Random(9,26);
	mob.ParamBase[(2)]=Random(9,15);
	mob.ParamBase[(72)]=mob.Param[(7)];  
	
	(mob.ParamBase[(534)]=mob.Param[(534)]|((0x00000004)));
}

void critter_init_aggr(Critter&mob,bool firstTime)
{
	mob.SetEvent((0),"_MobIdleAggr");
	mob.SetEvent((2),"_MobDead");
	mob.SetEvent((4),"_MobShowCritterAggr");
	mob.ParamBase[(77)]=Random(9,26);
	mob.ParamBase[(2)]=Random(9,15);
	mob.ParamBase[(72)]=mob.Param[(7)]; 
	
	(mob.ParamBase[(534)]=mob.Param[(534)]|((0x00000004)));
}

void _DontMove(Critter&mob,bool firstTime)
{
	mob.SetEvent((0),"_MobIdle2");
	mob.SetEvent((2),"_MobDead");
	mob.ParamBase[(77)]=Random(9,26);
	mob.ParamBase[(2)]=Random(9,15);
	mob.ParamBase[(72)]=mob.Param[(7)];  
	
	(mob.ParamBase[(534)]=mob.Param[(534)]|((0x00000004)));
}

void _MineMob(Critter&mob,bool firstTime)
{
	mob.SetEvent((0),"_MineMobIdle");
	mob.SetEvent((2),"_MobDead");
	mob.ParamBase[(77)]=Random(9,26);
	mob.ParamBase[(2)]=Random(9,15);
	mob.ParamBase[(72)]=mob.Param[(7)];
	(mob.ParamBase[(534)]=mob.Param[(534)]|((0x00000004)));
} 

void critter_init_half_agro(Critter&mob,bool firstTime)
{
	mob.SetEvent((0),"_MobIdleHalfAgro");
	mob.SetEvent((2),"_MobDead");
	mob.ParamBase[(77)]=Random(9,26);
	mob.ParamBase[(2)]=Random(9,15);
	mob.ParamBase[(72)]=mob.Param[(7)];  
	
	(mob.ParamBase[(534)]=mob.Param[(534)]|((0x00000004)));
}          

void _MobShowCritter(Critter&mob,Critter&showCrit)
{
	if(showCrit.IsPlayer())
	(mob.ParamBase[(91)])+=1;
}

bool _MobAttacked(Critter&mob,Critter&attacker)
{
	array<Critter@>players(0);
	array<Critter@>npc(0);
	array<Critter@>mobs(0);
	array<Critter@>nearMobs(0);
	Map@map=mob.GetMap();
	uint PlayersNum=map.GetCritters(0,(0x10)|(0x01),players);
	uint NpcNum=map.GetCritters(0,(0x20)|(0x01),npc);
	uint MobsNum=0;
	
	if(npc.length()>0)
	{
		for(uint n=0;n<NpcNum;n++)
		{
			if(((npc[n].Param[(534)]&((0x00000004)))!=0))
			{
				mobs.insertLast(npc[n]);
				MobsNum++;
			}
			if(!((npc[n].Param[(534)]&((0x00000004)))!=0))
			{
				players.insertLast(npc[n]);
				PlayersNum++;
			}
		}
	}
	if(!mob.IsSee(attacker))
	{
		AddWalkPlane(mob,0,attacker.HexX,attacker.HexY,0xff,true,1);
	}
	if(players.length()>0)
	{
		for(uint m=0;m<MobsNum;m++)
		{
			NpcPlane@plane=mobs[m].GetCurPlane();
			if(((@plane!=null))&&(plane.Type==(1)))
			{
				mobs[m].DropPlanes();
				for(uint i=0;i<PlayersNum;i++)
				{
					AddAttackPlane(mobs[m],(50),players[i]);
				}
			}
			uint NearMobsNum=mob.GetCritters(true,(0x20)|(0x01),nearMobs);
			for(uint n=0;n<NearMobsNum;n++)
			{
				AddAttackPlane(nearMobs[n],(50),attacker);
			}
		}
	}
	return true;
}

void _MobIdleHalfAgro(Critter&mob)
{
	
	if(!mob.IsLife())
	{
		mob.Wait((1000));
		return;
	} 
	
	array<Critter@>crits;
	
	uint num=mob.GetCritters(false,(0x10)|(0x03),crits);  
	
	uint dist=GetDistance(mob);
	for(uint i=0;i<num;i++)
	{
		if(GetCrittersDistantion(mob,crits[i])>dist)
		mob.Say((2),"Idling, Distance const: "+dist+", Dinstance var: "+GetCrittersDistantion(mob,crits[i]));
		
		else
		{
			
			mob.Say((2),"Attack, Distance const: "+dist+", Dinstance var: "+GetCrittersDistantion(mob,crits[i]));
			
			NpcPlane@plane=mob.GetCurPlane();
			if(((@plane!=null))&&(plane.Identifier!=(1)))
			mob.DropPlanes();
			
			mob.AddEnemyInStack(crits[i].Id);
			AddAttackPlane(mob,0,crits[i]);
			return;
		}
	}
	
	if(crits.length()>0)
	{
		MoveMob(mob,false);
		mob.Wait((200));
		
	}
	else  
	
	{
		MoveMob(mob,false);
		mob.Say((2),"Don't care");
		mob.Wait((200));
	}
	
}    

void _MineMobIdle(Critter&mob)
{
	
	if(!mob.IsLife())
	{
		mob.Wait((200));
		return;
	} 
	
	array<Critter@>crits;
	
	uint num=0;
	
	switch(Random(1,2))
	{
		case 1:{num=mob.GetCritters(false,(0x20)|(0x03),crits);break;}
		case 2:{num=mob.GetCritters(false,(0x10)|(0x03),crits);break;}
	} 
	
	uint dist=GetDistance(mob);
	for(uint i=0;i<num;i++)
	{
		if((GetCrittersDistantion(mob,crits[i])>dist)||(crits[i].Param[(89)]==(91)))
		continue;
		else
		{
			
			mob.AddEnemyInStack(crits[i].Id);
			return;
		}
	}
	
	if(crits.length()>0)
	{
		
		mob.Wait((200));
	}
	else
	{ 
		
		mob.Wait((200));
	}
}                             

void _MobIdle(Critter&mob)
{
	
	if(!mob.IsLife())
	{
		mob.Wait((5000));
		return;
	} 
	
	array<Critter@>crits;
	
	uint num=mob.GetCritters(false,(0x10)|(0x01),crits);  
	
	uint dist=GetDistance(mob);
	for(uint i=0;i<num;i++)
	{
		if(GetCrittersDistantion(mob,crits[i])>dist)
		continue;
		else
		{
			
			mob.AddEnemyInStack(crits[i].Id);
			return;
		}
	}
	if(crits.length()>0)
	{
		
		mob.Wait((1000));
	}
	else
	{
		MoveMob(mob,false);
		
		mob.Wait((5000));
	}
} 

void _MobIdle2(Critter&mob)
{
	
	array<Critter@>crits;
	
	uint num=mob.GetCritters(false,(0x10)|(0x01),crits); 
	
	uint dist=GetDistance(mob);
	for(uint i=0;i<num;i++)
	{
		if(GetCrittersDistantion(mob,crits[i])>dist)
		continue;
		else
		{ 
			
			mob.AddEnemyInStack(crits[i].Id);
			return;
		}
	}
	if((mob.ParamBase[(91)])>0)
	{
		
		mob.Wait((1000));
	}
	else
	{ 
		
		mob.Wait((5000));
	}
}

void _MobDead(Critter&mob,Critter@killer)
{
	mob.ClearEnemyStack();
}

void MoveMob(Critter&mob,bool run)
{
	int dist=Random(0,(mob.Param[(89)]%100/10));
	if(dist==0)
	{
		mob.MoveRandom();
	}
	else
	{
		
		uint16 hexX=mob.HexX;
		uint16 hexY=mob.HexY;
		mob.GetMap().MoveHexByDir(hexX,hexY,Random(0,5),dist);
		AddWalkPlane(mob,0,hexX,hexY,0xff,run,0);
	}
}   

int GetDistance(Critter&mob)
{
	
	int base=__LookNormal+3*mob.Param[(1)];   
	
	int role=int(mob.Param[(89)]);
	switch(role)
	{
		case(0):
		case(200):
		
		return base/3;
		case(1):
		case(90):
		case(201):
		return base/2;
		case(2):
		case(91):
		case(202):
		return base/4;
	}
	return base/3;
}

void _MobHideCritter(Critter&mob,Critter&hideCrit)
{
	if(hideCrit.IsPlayer())
	(mob.ParamBase[(91)])-=1;
}

void _MobDead(Critter&mob)
{} 

void _MobIdleAggr(Critter&mob)
{
	
	if(!mob.IsLife())
	{
		return;
	} 
	
	array<Critter@>crits;
	
	uint num=mob.GetCritters(false,(0x10)|(0x01),crits);  
	
	uint dist=GetDistance(mob);
	for(uint i=0;i<num;i++)
	{
		if(GetCrittersDistantion(mob,crits[i])>dist)
		continue;
		else
		{
			
			mob.AddEnemyInStack(crits[i].Id);
			return;
		}
	}
	if(crits.length()>0)
	{
		
	}
	else
	{
		MoveMob(mob,false);
		
	}
} 

void _MobShowCritterAggr(Critter&mob,Critter&showCrit)
{
	if(showCrit.IsPlayer()&&showCrit.IsLife())
	{
		uint dist=GetDistance(mob);
		if(GetCrittersDistantion(mob,showCrit)<=dist)
		{ 
			
			mob.Say((2),"Attack when walking.");    
			
			mob.AddEnemyInStack(showCrit.Id);
			AddAttackPlane(mob,0,showCrit);
			
		}
	}
}