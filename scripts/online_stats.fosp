

int week_patch=1;
int doubleloot=1;
bool dropchance(float chance)
{
	if(chance==0)
	return false;
	if(Random(0,100)<chance)
	return true;
	
	return false;
	
}

bool can_tc_modoc=false;
bool can_tc_klamath=false;
bool can_tc_gecko=false;
bool can_tc_bh=false;
bool can_tc_redding=false;
bool can_tc_den=false;
bool can_tc_necro=false;
bool can_tc_reno=false;

uint when_tc_modoc=0;
uint when_tc_klamath=0;
uint when_tc_gecko=0;
uint when_tc_bh=0;
uint when_tc_redding=0;
uint when_tc_den=0;
uint when_tc_necro=0;
uint when_tc_reno

shared interface IConfigVar
{
	string GetName();
	string GetValue();
	array<string>GetValueAsArray();
	array<string>GetValueAsArray(string&delimeter);
	void SetValue(int val);
	void SetValue(uint val);
	void SetValue(string&val);
	void SetValue(array<string>&val);
	void SetValue(array<string>&val,string&delimeter);
};

shared interface IConfigSection
{
	string GetName();
	bool AddVar(string&var,string&val);
	bool DeleteVar(string&var);
	bool DeleteVar(string&var,bool caseSensitive);
	IConfigVar@GetVar(string&var);
	IConfigVar@GetVar(string&varname,bool caseSensitive);
	void GetVars(array<string>&list);
	bool SetVar(string&varname,string val);
	bool VarExists(string&var);
	bool VarExists(string&var,bool caseSensitive);
};

shared interface IConfigFile
{
	bool IsVirtual();
	string GetName();
	bool AddSection(string&section);
	IConfigSection@GetSection(string&section);
	IConfigSection@GetSection(string&sectioname,bool caseSensitive);
	void GetSections(array<string>&list);
	bool SectionExists(string&section);
	bool SectionExists(string&section,bool caseSensitive);
};  

import IConfigFile@NewConfig(string&filename)from"config_file";
import bool LoadConfig(string&filename)from"config_file";
import bool SaveConfig(string&filename)from"config_file";
import bool UnloadConfig(string&filename)from"config_file";

import IConfigFile@GetConfigFile(string&filename)from"config_file";
import IConfigFile@GetConfigFile(string&filename,bool caseSensitive)from"config_file";
import IConfigSection@GetConfigSection(string&filename,string&sectioname)from"config_file";
import IConfigSection@GetConfigSection(string&filename,string&sectioname,bool caseSensitive)from"config_file";
import IConfigVar@GetConfigVar(string&filename,string&sectioname,string@varname)from"config_file";
import IConfigVar@GetConfigVar(string&filename,string&sectioname,string@varname,bool caseSensitive)from"config_file";

import string@GetConfigValue(string&filename,string&section,string@varname)from"config_file";
import string@GetConfigValue(string&filename,string&sectioname,string@varname,bool caseSensitive)from"config_file";

import bool SetConfigValue(string&filename,string&sectioname,string@varname,string&value)from"config_file";
import bool SetConfigValue(string&filename,string&sectioname,string@varname,bool value)from"config_file";
import bool SetConfigValue(string&filename,string&sectioname,string@varname,int value)from"config_file";
import bool SetConfigValue(string&filename,string&sectioname,string@varname,uint value)from"config_file";                                                                 

bool OS_Disabled=false;
bool OS_Initialized=false;
string OS_Directory="";

void OnlineStats_Init()
{
	if(OS_Disabled||OS_Initialized)
	return;
	
	LoadConfig("config\\OnlineStats.cfg");
	IConfigFile@config=GetConfigFile("config\\OnlineStats.cfg");
	if(!(@config!=null))
	{
		Log("ONLINE_STATS CONFIG NOT LOADED, please panic.");
		OS_Disabled=true;
		return;
	}
	
	string@tmp=GetConfigValue("config\\OnlineStats.cfg","VTDB","DataBaseDirectory");
	if(!(@tmp!=null))
	{
		Log("VTDB : DataBaseDirectory not set");
		OS_Disabled=true;
		return;
	}
	
	OS_Directory=tmp;
	OS_Initialized=true;
	return;
}

void OnlineStats_TrySave(Critter&target)
{
	if(OS_Disabled)
	return;
	
	OnlineStats_Init();
	
	if(target.IsNpc())
	return;
	
	GameVar@var=GetLocalVar((60000),target.Id);
	if((@var!=null))
	{
		int flags=var.GetValue();
		OnlineStats_CharDelete(target,OS_Directory);
		if(flags==0)
		return;
		else
		{
			Log("VTDB : "+target.Name+"<"+target.Id+">");
			OnlineStats_CharSave(target,flags,OS_Directory);
		}
	}
	else
	Log("VTDB : error "+target.Name+"<"+target.Id+"> LVAR_online_stats<"+(60000)+"> not found");
}    

void OnlineStats_SendSetup(Critter&target)
{
	unsafe_setup(target,0,-1,0," ",null);
}   

void unsafe_setup(Critter&target,int flags,int mode,int,string@,array<int>@)
{
	int retflags=0;
	GameVar@var=GetLocalVar((60000),target.Id);
	
	if(mode<0)
	{
		target.RunClientScript("client_online_stats@_Setup",var.GetValue(),0,0," ",null);
		XFireClient_ClearInfo(target);
		XFireClient_Update(target);
		return;
	}    
	
	if((((flags)&((0x00000001)))!=0))
	{
		((retflags)=(retflags)|((0x00000001)));
	}
	else
	{
		if((((flags)&((0x00000002)))!=0)){((retflags)=(retflags)|((0x00000002)));};
		if((((flags)&((0x00000004)))!=0)){((retflags)=(retflags)|((0x00000004)));};
		if((((flags)&((0x00000008)))!=0)){((retflags)=(retflags)|((0x00000008)));};
		if((((flags)&((0x00000010)))!=0)){((retflags)=(retflags)|((0x00000010)));};
		if((((flags)&((0x00000020)))!=0)){((retflags)=(retflags)|((0x00000020)));};
		if((((flags)&((0x00000040)))!=0)){((retflags)=(retflags)|((0x00000040)));};
		if((((flags)&((0x00000080)))!=0)){((retflags)=(retflags)|((0x00000080)));};
		if((((flags)&((0x00000100)))!=0)){((retflags)=(retflags)|((0x00000100)));};
		if((((flags)&((0x00000200)))!=0)){((retflags)=(retflags)|((0x00000200)));};
		if((((flags)&((0x00000400)))!=0)){((retflags)=(retflags)|((0x00000400)));};
		if((((flags)&((0x00000800)))!=0)){((retflags)=(retflags)|((0x00000800)));};
		if((((flags)&((0x00001000)))!=0)){((retflags)=(retflags)|((0x00001000)));};
		if((((flags)&((0x00002000)))!=0)){((retflags)=(retflags)|((0x00002000)));};
	} 
	
	if((((flags)&((0x00004000)))!=0))
	{
		((retflags)=(retflags)|((0x00004000)));
	}
	else
	{
		if((((flags)&((0x00008000)))!=0)){((retflags)=(retflags)|((0x00008000)));};
		if((((flags)&((0x00010000)))!=0)){((retflags)=(retflags)|((0x00010000)));};
		if((((flags)&((0x00020000)))!=0)){((retflags)=(retflags)|((0x00020000)));};
		if((((flags)&((0x00040000)))!=0)){((retflags)=(retflags)|((0x00040000)));};
	}
	
	if(var.GetValue()!=retflags)
	Log("VTDB : updating "+target.Name+"<"+target.Id+"> "+var.GetValue()+" -> "+retflags+(retflags!=flags?" (was "+flags+")":""));
	var=retflags;
	
	target.RunClientScript("client_online_stats@_Setup",retflags,1,0," ",null);
	OnlineStats_TrySave(target);
	XFireClient_ClearInfo(target);
	XFireClient_Update(target);
}  

void charsave(Critter&player,int param0,int param1,int param2)
{
	Critter@target=GetCritter(param0);
	if(!(@target!=null))
	{
		player.Say((11),"Invalid target: "+param0);
		return;
	}
	;
	
	if(target.IsNpc())
	{
		player.Say((11),"Not for NPCs");
		return;
	}
	;
	
	GameVar@var=GetLocalVar((60000),target.Id);
	if((@var!=null))
	{
		Log("VTDB manual : "+target.Name+"<"+target.Id+">");
		OnlineStats_TrySave(target);
	}
	else
	{
		string msg=target.Name+"<"+target.Id+">: LVAR_online_stats ("+(60000)+") not found";
		player.Say((11),""+msg);
		Log("VTDB : "+msg);
	}
}

void get(Critter&player,int,int,int)
{
	OnlineStats_SendSetup(player);
}

void v_showflags(Critter&player)
{
	player.Say((11),"1  = OS_VTDB_SPECIAL");
	player.Say((11),"2  = OS_VTDB_XP");
	player.Say((11),"3  = OS_VTDB_LIFE");
	player.Say((11),"4  = OS_VTDB_STATS");
	player.Say((11),"5  = OS_VTDB_SKILLS");
	player.Say((11),"6  = OS_VTDB_TRAITS");
	player.Say((11),"7  = OS_VTDB_PERKS");
	player.Say((11),"8  = OS_VTDB_PROFESSIONS");
	player.Say((11),"9  = OS_VTDB_KARMA");
	player.Say((11),"10 = OS_VTDB_ADDICTIONS");
	player.Say((11),"11 = OS_VTDB_REPUTATION");
	player.Say((11),"12 = OS_VTDB_KILLS");
	player.Say((11),"13 = OS_VTDB_POSITION");
	player.Say((11),"14 = OS_XFIRE_CHARNAME");
	player.Say((11),"15 = OS_XFIRE_CHARLEVEL");
	player.Say((11),"16 = OS_XFIRE_LOCATION");
	player.Say((11),"17 = OS_XFIRE_AWARDS");
	
	return;
};

void showflags(Critter&player,int param0,int param1,int param2)
{
	player.Say((11),"Valid flags:");
	v_showflags(player);
	
	return;
};

void getflags(Critter&player,int param0,int param1,int param2)
{
	Critter@target=GetCritter(param0);
	if(!(@target!=null))
	{
		player.Say((11),"Invalid target: "+param0);
		return;
	}
	;
	
	if(target.IsNpc())
	{
		player.Say((11),"Not for NPCs");
		return;
	}
	;
	
	GameVar@var=GetLocalVar((60000),target.Id);
	if((@var!=null))
	{
		int flags=var.GetValue();
		player.Say((11),"Flags for "+target.Name+" ("+target.Id+"): "+flags);
		if(flags==0)
		{
			player.Say((11)," None");
		}
		else
		{
			
			if((((flags)&((0x00000002)))!=0))
			player.Say((11),"  OS_VTDB_SPECIAL");
			if((((flags)&((0x00000004)))!=0))
			player.Say((11),"  OS_VTDB_XP");
			if((((flags)&((0x00000008)))!=0))
			player.Say((11),"  OS_VTDB_LIFE");
			if((((flags)&((0x00000010)))!=0))
			player.Say((11),"  OS_VTDB_STATS");
			if((((flags)&((0x00000020)))!=0))
			player.Say((11),"  OS_VTDB_SKILLS");
			if((((flags)&((0x00000040)))!=0))
			player.Say((11),"  OS_VTDB_TRAITS");
			if((((flags)&((0x00000080)))!=0))
			player.Say((11),"  OS_VTDB_PERKS");
			if((((flags)&((0x00000100)))!=0))
			player.Say((11),"  OS_VTDB_PROFESSIONS");
			if((((flags)&((0x00000200)))!=0))
			player.Say((11),"  OS_VTDB_KARMA");
			if((((flags)&((0x00000200)))!=0))
			player.Say((11),"  OS_VTDB_ADDICTIONS");
			if((((flags)&((0x00000800)))!=0))
			player.Say((11),"  OS_VTDB_REPUTATION");
			if((((flags)&((0x00001000)))!=0))
			player.Say((11),"  OS_VTDB_KILLS");
			if((((flags)&((0x00002000)))!=0))
			player.Say((11),"  OS_VTDB_POSITION");
			
			if((((flags)&((0x00008000)))!=0))
			player.Say((11),"  OS_XFIRE_CHARNAME");
			if((((flags)&((0x00010000)))!=0))
			player.Say((11),"  OS_XFIRE_CHARLEVEL");
			if((((flags)&((0x00020000)))!=0))
			player.Say((11),"  OS_XFIRE_LOCATION");
			if((((flags)&((0x00040000)))!=0))
			player.Say((11),"  OS_XFIRE_AWARDS");
		};
	}
	else
	player.Say((11),target.Name+"("+target.Id+"): LVAR_online_stats ("+(60000)+") not found");
	
	return;
};

void setflag(Critter&player,int param0,int param1,int param2)
{
	Critter@target=GetCritter(param0);
	if(!(@target!=null))
	{
		player.Say((11),"Invalid target: "+param0);
		return;
	}
	;
	
	if(target.IsNpc())
	{
		player.Say((11),"Not for NPCs");
		return;
	}
	;
	
	GameVar@var=GetLocalVar((60000),target.Id);
	if((@var!=null))
	{
		int flag=0;
		
		switch(param1)
		{
			case 1:
			flag=(0x00000002);
			break;
			case 2:
			flag=(0x00000004);
			break;
			case 3:
			flag=(0x00000008);
			break;
			case 4:
			flag=(0x00000010);
			break;
			case 5:
			flag=(0x00000020);
			break;
			case 6:
			flag=(0x00000040);
			break;
			case 7:
			flag=(0x00000080);
			break;
			case 8:
			flag=(0x00000100);
			break;
			case 9:
			flag=(0x00000200);
			break;
			case 10:
			flag=(0x00000400);
			break;
			case 11:
			flag=(0x00000800);
			break;
			case 12:
			flag=(0x00001000);
			break;
			case 13:
			flag=(0x00002000);
			break;
			case 14:
			flag=(0x00008000);
			break;
			case 15:
			flag=(0x00010000);
			break;
			case 16:
			flag=(0x00020000);
			break;
			case 17:
			flag=(0x00040000);
			break;
			default:
			player.Say((11),"Invalid flag");
			v_showflags(player);
			return;
		}
		;
		
		uint tmp=var.GetValue();
		if(param2<=0)
		{
			player.Say((11),"Flag unset");
			(tmp=((tmp)&(~(flag))));
		}
		else if(param2>=1)
		{
			player.Say((11),"Flag set");
			((tmp)=(tmp)|(flag));
		}
		;
		var=tmp;
		
		getflags(player,target.Id,0,0); 
		
		player.RunClientScript("client_online_stats@_Setup",tmp,1,0," ",null);
	}
	else
	{
		string msg=target.Name+"("+target.Id+"): LVAR_online_stats ("+(60000)+") not found";
		player.Say((11),""+msg);
		Log("VTDB : "+msg);
	};
};

void setflags(Critter&player,int param0,int param1,int param2)
{
	setflag(player,param0,param1,param2);
};    

void XFireClient_SetInfo(Critter&player,string&name,string&value)
{
	if((@name!=null)&&name!="")
	{
		if(!(@value!=null))
		value="";
		
		{;};
		player.RunClientScript("client_online_stats@_XFire",(1),0,0,name+"="+value,null);
	}
}

void XFireClient_SetInfoRaw(Critter&player,string&raw)
{
	if((@raw!=null))
	{
		{;};
		player.RunClientScript("client_online_stats@_XFire",(1),0,0,raw,null);
	}
}

void XFireClient_SetInfoMsg(Critter&player,string&name,int msg,int id)
{
	if((@name!=null)&&name!=""&&msg>=0&&id>0)
	{   
		
		player.RunClientScript("client_online_stats@_XFire",(2),msg,id,name,null);
	}
}

void XFireClient_ClearInfo(Critter&player)
{
	player.RunClientScript("client_online_stats@_XFire",(-1),0,0," ",null);
}

bool HaveOSFlag(Critter&player,int flag)
{
	GameVar@var=GetLocalVar((60000),player.Id);
	if((@var!=null))
	{
		int flags=var.GetValue();
		if((((flags)&(flag))!=0))
		return(true);
		else
		return(false);
	}
	else
	return(false);
}

void XFireClient_Update(Critter&player)
{
	XFireClient_SetInfoMsg(player,"Server",(3),(1));
	
	if(HaveOSFlag(player,(0x00004000))||HaveOSFlag(player,(0x00008000)))
	{
		string char=player.Name;
		if(HaveOSFlag(player,(0x00004000))||HaveOSFlag(player,(0x00010000)))
		char+=" ("+player.Param[(77)]+")";
		XFireClient_SetInfo(player,"Character",char);
	}
	
	if(HaveOSFlag(player,(0x00004000))||HaveOSFlag(player,(0x00020000)))
	{
		Map@map=player.GetMap();
		if((@map!=null))
		{
			Location@loc=map.GetLocation();
			if((@loc!=null))
			{
				
				uint16 locpid=loc.GetProtoId();
				XFireClient_SetInfoMsg(player,"Location",(4),((locpid+100)*1000+0));
			}
			else
			{
				XFireClient_SetInfo(player,"Location","Unknown");
			}
		}
		else
		{
			XFireClient_SetInfo(player,"Location","Worldmap");
		}
	}
}                         

