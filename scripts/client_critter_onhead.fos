#include "_defines.fos"
#include "_client_defines.fos"
#include "_macros.fos"
#include "_colors.fos"
#include "lexems_h.fos"
#include "MsgStr.h"
#include "_basetypes.fos"
#include "sprite.fos"

import bool GMToolsAccess() from "client_gmtools";
import bool IsGMTEnabled() from "client_main";
#define IsGM    IsGMTEnabled() && GMToolsAccess

import int stringReplaceText(string& s, string@ f, string@ t) from "config_file";
import int GUI_GetActiveMainScreen() from "client_gui";
import int GUI_GetActiveScreen() from "client_gui";

array<CritterCl@> crs;

void InitCritterOnHead()	//export
{
	__ShowNpcNames = __ConfigShowNpcAwareness;
}

void DrawCritterOnHead()	//export
{
	if(GUI_GetActiveMainScreen() != CLIENT_MAIN_SCREEN_GAME)
		return;

	crs.resize(0);
	GetCritters( 0, FIND_ALL, crs );

	int color_b = 0;
	int color_g = 0;
	int color_r = 0;
	int hp_proc = 0;
	string name;
	string hp;
	string inj;
	string crInjures;
	string mobDesc;
	string playerDesc;
	string factiontag;

	CritterCl@ chosen = GetChosen();

	for(uint  i = 0, imax = crs.length(); i < imax; i ++)
	{
		//OnHeadAwareness
		uint   dialog = crs[i].Param[ST_DIALOG_ID];
        uint16 pid = crs[i].Pid;
        string head = (crs[i].IsPlayer() ? crs[i].Name : " ");

        if(IsLexem(crs[i], "$@"))
        {
            head = GetLexem(crs[i], "$@");
            if(head.length() == 0)
                head = " ";
			
			stringReplaceText(head, "|", "");
            head = FormatTags(head, "");
        }

        if(IsGM())
        {
            array<string> gm;

            string        id = "<" + crs[i].Id + ">";

            if((crs[i].IsPlayer() && head != crs[i].Name) || (crs[i].IsNpc() && IsLexem(crs[i], "$@")))
            {
                if(crs[i].IsPlayer())
                    gm.insertLast("Player: " + crs[i].Name);
                else if(crs[i].IsNpc())
                    gm.insertLast("NPC: " + GetMsgStr(TEXTMSG_DLG, STR_NPC_NAME(dialog, pid)));
            }

            if(__ShowCritId)
                gm.insertLast("ID: " + crs[i].Id);

            if(crs[i].Param[MODE_HIDE] > 0)
                gm.insertLast("sneaked");

            if(gm.length() > 0)
            {
                head += "|" + COLOR_RGB(0xFF, 0xFF, 0xFF) + " ";
                for(uint g = 0, gLen = gm.length(); g < gLen; g++)
                {
                    head += "\n(" + gm[g] + ")";
                }
            }
        }

		if(head != " ")
		{
			name = "\n" +  "|" + crs[i].NameColor + " " + head;
			crs[i].ContourColor = crs[i].ContourColor;
			
			if(crs[i].Param[ST_TEAM_ID] == chosen.Param[ST_TEAM_ID] && crs[i].Id != chosen.Id && crs[i].Param[MODE_HIDE] != 0)
				name = name + " (sneaked)";
		}
		else 
			name = " ";
			
		
		
		if(crs[i].IsPlayer() && crs[i].Param[ST_NPC_BOSS] > 0)
		{
			switch(crs[i].Param[ST_NPC_BOSS])
			{
				case 1 : playerDesc = "\n|" + COLOR_RGB(0, 255, 255) + " -TESTER-"; break;
				case 2 : playerDesc = "\n|" + COLOR_RGB(255, 255, 0) + " -GM-"; break;
				case 3 : playerDesc = "\n|" + COLOR_RGB(44, 199, 55) + " Admin"; break;
			}
		}
		else if(crs[i].IsPlayer() && crs[i].Param[ST_NPC_ROLE] > 0)
		{
			switch(crs[i].Param[ST_NPC_ROLE])
			{
				case 208 : playerDesc = "\n|" + COLOR_RGB(255, 0, 102) + " Unity"; break;
				case 207 : playerDesc = "\n|" + COLOR_RGB(230, 150, 14) + " NCR"; break;
				case 206 : playerDesc = "\n|" + COLOR_RGB(14, 88, 203) + " Vault City"; break;
				case 209 : playerDesc = "\n|" + COLOR_RGB(255, 255, 255) + " Brotherhood"; break;
				case 204 : playerDesc = "\n|" + COLOR_RGB(88, 88, 88) + " Enclave"; break;
				case 212 : playerDesc = "\n|" + COLOR_RGB(255, 0, 0) + " Master's Army"; break;
				case 231 : playerDesc = "\n|" + COLOR_RGB(0, 255, 255) + " Salvatories"; break;
				case 232 : playerDesc = "\n|" + COLOR_RGB(153, 102, 51) + " Bishops"; break;
				case 233 : playerDesc = "\n|" + COLOR_RGB(255, 255, 0) + " Wrigths"; break;
				case 234 : playerDesc = "\n|" + COLOR_RGB(153, 0, 153) + " Mordinos"; break;
				case 240 : playerDesc = "\n|" + COLOR_RGB(54, 200, 54) + " TEAM A"; break;
				case 241 : playerDesc = "\n|" + COLOR_RGB(255, 190, 0) + " TEAM B"; break;

			}
			switch(crs[i].Param[ST_SCENARIO])
			{
				case 242 : playerDesc = "\n|" + COLOR_RGB(0, 184, 46) + " Patrol Unit"; break;
				case 243 : playerDesc = "\n|" + COLOR_RGB(0, 184, 46) + " NCRA Recruit"; break;
				case 244 : playerDesc = "\n|" + COLOR_RGB(0, 184, 46) + " NCRA Private"; break;
 				case 245 : playerDesc = "\n|" + COLOR_RGB(0, 184, 46) + " NCRA Sergeant"; break;
				case 246 : playerDesc = "\n|" + COLOR_RGB(0, 184, 46) + " NCRA Captain"; break;
				case 247 : playerDesc = "\n|" + COLOR_RGB(0, 184, 46) + " NCRA Officer"; break;
				case 248 : playerDesc = "\n|" + COLOR_RGB(0, 184, 46) + " RNG Ranger"; break;
 				case 249 : playerDesc = "\n|" + COLOR_RGB(0, 184, 46) + " RNG Berserker"; break;
 				case 250 : playerDesc = "\n|" + COLOR_RGB(0, 184, 46) + " RNG Medic"; break;
 				case 251 : playerDesc = "\n|" + COLOR_RGB(0, 184, 46) + " RNG Overwatch"; break;
 				case 252 : playerDesc = "\n|" + COLOR_RGB(0, 184, 46) + " Chief Inspector"; break;
 				case 253 : playerDesc = "\n|" + COLOR_RGB(0, 184, 46) + " General"; break;
 				case 254 : playerDesc = "\n|" + COLOR_RGB(255, 255, 255) + " Initiate"; break;
				case 255 : playerDesc = "\n|" + COLOR_RGB(255, 255, 255) + " Scribe"; break;
 				case 256 : playerDesc = "\n|" + COLOR_RGB(255, 255, 255) + " Knight"; break;
 				case 257 : playerDesc = "\n|" + COLOR_RGB(255, 255, 255) + " PLD Paladin"; break;
				case 258 : playerDesc = "\n|" + COLOR_RGB(255, 255, 255) + " PLD Medic"; break;
 				case 259 : playerDesc = "\n|" + COLOR_RGB(255, 255, 255) + " PLD HEV"; break;
 				case 260 : playerDesc = "\n|" + COLOR_RGB(255, 255, 255) + " Senior Paladin"; break;
 				case 261 : playerDesc = "\n|" + COLOR_RGB(255, 255, 255) + " Senior Knight"; break;
 				case 262 : playerDesc = "\n|" + COLOR_RGB(255, 255, 255) + " Head Paladin"; break;
 				case 263 : playerDesc = "\n|" + COLOR_RGB(255, 255, 255) + " Head Knight"; break;
 				case 264 : playerDesc = "\n|" + COLOR_RGB(255, 255, 255) + " Head Scribe"; break;
 				case 265 : playerDesc = "\n|" + COLOR_RGB(136, 0, 200) + " Deacon"; break;
 				case 266 : playerDesc = "\n|" + COLOR_RGB(136, 0, 200) + " Kenovit"; break;
 				case 267 : playerDesc = "\n|" + COLOR_RGB(136, 0, 200) + " Inquisitor"; break;
 				case 268 : playerDesc = "\n|" + COLOR_RGB(136, 0, 200) + " WLF Omega"; break;
 				case 269 : playerDesc = "\n|" + COLOR_RGB(136, 0, 200) + " WLF Gamma"; break;
 				case 270 : playerDesc = "\n|" + COLOR_RGB(136, 0, 200) + " WLF Betta"; break;
 				case 271 : playerDesc = "\n|" + COLOR_RGB(136, 0, 200) + " WLF Alpha"; break;
 				case 272 : playerDesc = "\n|" + COLOR_RGB(136, 0, 200) + " Eclysiarchus"; break;
 				case 273 : playerDesc = "\n|" + COLOR_RGB(153, 0, 153) + " Rebel"; break;
 				case 274 : playerDesc = "\n|" + COLOR_RGB(153, 0, 153) + " Rebel Medic"; break;
 				case 275 : playerDesc = "\n|" + COLOR_RGB(153, 0, 153) + " Scout"; break;
 				case 276 : playerDesc = "\n|" + COLOR_RGB(153, 0, 153) + " Captain"; break;
 				case 277 : playerDesc = "\n|" + COLOR_RGB(153, 0, 153) + " HDR Spy"; break;
 				case 278 : playerDesc = "\n|" + COLOR_RGB(153, 0, 153) + " HDR Agent"; break;
 				case 279 : playerDesc = "\n|" + COLOR_RGB(153, 0, 153) + " CLA Commander"; break;
 				case 280	 : playerDesc = "\n|" + COLOR_RGB(153, 0, 153) + " HDR Leader"; break;
				case 281 : playerDesc = "\n|" + COLOR_RGB(0, 184, 46) + " RNG SHD Unit"; break;
				case 282 : playerDesc = "\n|" + COLOR_RGB(0, 184, 46) + " RNG Elite Patrol Unit"; break;
				case 283 : playerDesc = "\n|" + COLOR_RGB(0, 184, 46) + " RNG Division Commander"; break;
				}
		}
		

		else
			playerDesc = "";
		if(crs[i].Param[ST_NPC_ROLE] == 211)
		playerDesc = "\n|" + COLOR_RGB(crs[i].Param[ST_VAR7], crs[i].Param[ST_VAR8], crs[i].Param[ST_VAR9]) + " Player Shop";
		
		if(crs[i].IsPlayer() && !__ConfigShowPlayerAwareness)
		{
			crs[i].NameOnHead = name;
			continue;	
		}
		if((crs[i].IsLife() || crs[i].IsKnockout()) && crs[i].Param[ST_NPC_ROLE] == 203 /*ROLE_MOB_DYNAMIC*/ && crs[i].IsNpc())
		{
			switch(GetCurrentMapPid())
			{
				case MAP_NCR :
				case MAP_Adytum :
				case MAP_HubDowntown :
				case MAP_Junktown :
				case MAP_SanFranChina :
					if(crs[i].Param[ST_NPC_BOSS] == 1 /*MOB_IS_BOSS*/) mobDesc = "\n|" + COLOR_RGB(200, 0, 0) + " Boss of Town Raiders";
					else  mobDesc = "\n|" + COLOR_RGB(200, 0, 0) + " Town Raider";
					break;
				default:
					if(crs[i].Param[ST_NPC_BOSS] == 1 /*MOB_IS_BOSS*/) mobDesc = "\n|" + COLOR_RGB(200, 0, 0) + " BOSS";
					else  mobDesc = "";
					break;
				}					
			}
		else if(crs[i].Param[ST_NPC_ROLE] == 210 /*ROLE_REWARD_GIVER*/ && crs[i].IsNpc())
		{
			switch(GetCurrentMapPid())
			{
				case MAP_NCR :
				case MAP_Adytum :
				case MAP_HubDowntown :
				case MAP_Junktown :
				case MAP_SanFranChina :
					mobDesc = "\n|" + COLOR_CRITTER_NAME + " -Reward Giver-";
					break;
			}					
		}
		else if((crs[i].IsLife() || crs[i].IsKnockout()) && crs[i].IsNpc() && crs[i].Param[ST_NPC_ROLE] == 204)
		mobDesc = "\n|" + COLOR_RGB(88, 88, 88) + " Enclave Soldier";
		else if((crs[i].IsLife() || crs[i].IsKnockout()) && crs[i].IsNpc() && crs[i].Param[ST_NPC_ROLE] == 209)
		mobDesc = "\n|" + COLOR_RGB(255, 255, 255) + " Brotherhood Soldier";
		else if((crs[i].IsLife() || crs[i].IsKnockout()) && crs[i].IsNpc() && crs[i].Param[ST_NPC_ROLE] == 206)
		mobDesc = "\n|" + COLOR_RGB(14, 88, 203) + " Vault City Soldier";
		else if((crs[i].IsLife() || crs[i].IsKnockout()) && crs[i].IsNpc() && crs[i].Param[ST_NPC_ROLE] == 207)
		mobDesc = "\n|" + COLOR_RGB(230, 150, 14) + " NCR Soldier";		
		else if((crs[i].IsLife() || crs[i].IsKnockout()) && crs[i].IsNpc() && crs[i].Param[ST_NPC_ROLE] == 208)
		mobDesc = "\n|" + COLOR_RGB(255, 0, 102) + " Unity Soldier";	
		else if((crs[i].IsLife() || crs[i].IsKnockout()) && crs[i].IsNpc() && crs[i].Param[ST_NPC_ROLE] == 212)
		mobDesc = "\n|" + COLOR_RGB(255, 0, 0) + " Master's Soldier";
		else if((crs[i].IsLife() || crs[i].IsKnockout()) && crs[i].IsNpc() && crs[i].Param[ST_NPC_ROLE] == 269)
		mobDesc = "\n|" + COLOR_RGB(255, 0, 0) + " BOSS";
		else if((crs[i].IsLife() || crs[i].IsKnockout()) && crs[i].IsNpc() && crs[i].Param[ST_NPC_ROLE] == 231)
		mobDesc = "\n|" + COLOR_RGB(0, 255, 255) + " Salvatories Thug"; 
		else if((crs[i].IsLife() || crs[i].IsKnockout()) && crs[i].IsNpc() && crs[i].Param[ST_NPC_ROLE] == 232)
		mobDesc = "\n|" + COLOR_RGB(153, 102, 51) + " Bishops Thug"; 
		else if((crs[i].IsLife() || crs[i].IsKnockout()) && crs[i].IsNpc() && crs[i].Param[ST_NPC_ROLE] == 233)
		mobDesc = "\n|" + COLOR_RGB(255, 255, 0) + " Wrigths Thug";
		else if((crs[i].IsLife() || crs[i].IsKnockout()) && crs[i].IsNpc() && crs[i].Param[ST_NPC_ROLE] == 234)
		mobDesc = "\n|" + COLOR_RGB(153, 0, 153) + " Mordinos Thug"; 
		else if((crs[i].IsLife() || crs[i].IsKnockout()) && crs[i].IsNpc() && crs[i].Param[ST_DIALOG_ID] == 10810)
		mobDesc = "\n|" + COLOR_RGB(255, 0, 255) + " EVENT|" + COLOR_RGB(0, 255, 255) + " TELEPORTER";
		else
				mobDesc = "";
				
		if(crs[i].IsNpc() && !__ConfigShowNpcAwareness)
		{
			crs[i].NameOnHead = name;
			continue;
		}

		if(crs[i].IsDead() == false)
		{
			if(valid(chosen) && __ConfigOnHeadAwareness == 1)
			{
				color_g = (255*crs[i].Param[ST_CURRENT_HP])/crs[i].Param[ST_MAX_LIFE];
				hp_proc = crs[i].Param[ST_CURRENT_HP] * 100 / crs[i].Param[ST_MAX_LIFE];

				if(color_g < 0)
					color_g = 0;
				color_r = 255 - color_g;
				if(crs[i].Param[ST_CURRENT_HP] >= crs[i].Param[ST_MAX_LIFE])
				{
					color_r = 0;
					color_g = 255;
				}
				hp = "|" + COLOR_RGB(color_r, color_g, color_b) + " " + crs[i].Param[ST_CURRENT_HP] + "/" + crs[i].Param[ST_MAX_LIFE];
			}
			else
			{
				string lifeRes = "";
				switch(crs[i].Param[ST_HEALTH_LEVEL])
				{
					case 4: lifeRes = "****"; break;
					case 3: lifeRes = "***"; break;
					case 2: lifeRes = "**"; break;
					case 1: lifeRes = "*"; break;
				}
				
				hp = "|" + (crs[i].Param[ST_HEALTH_LEVEL] < 1 ? COLOR_LGRAY : COLOR_RGB(0xff - (0xff * crs[i].Param[ST_HEALTH_LEVEL]) / 5, (0xff * crs[i].Param[ST_HEALTH_LEVEL]) / 5, 0)) + " " + lifeRes;
			}
			switch(crs[i].Param[ST_TEAM_ID])
			{
			case 0 : factiontag = "\n|" + COLOR_RGB(255, 255, 255) + " "; break;
			case 1 : factiontag = "\n|" + COLOR_RGB(255, 255, 255) + " "; break;
			case 2 : factiontag = "\n|" + COLOR_RGB(255, 255, 255) + " BoS "; break;
			case 3 : factiontag = "\n|" + COLOR_RGB(88, 88, 88) + " ENC "; break;
			case 4 : factiontag = "\n|" + COLOR_RGB(255, 255, 0) + " B" + "|" + COLOR_RGB(255, 0, 0) + " U" + "|" + COLOR_RGB(0, 255, 255) + " R"+ "|"  + COLOR_RGB(100, 100, 255) + " S"+ "|"  + COLOR_RGB(0, 255, 0) + " T "; break;
			case 5 : factiontag = "\n|" + COLOR_RGB(230, 150, 14) + " NCR "; break;
			case 6 : factiontag = "\n|" + COLOR_RGB(14, 88, 203) + " VC "; break;
			case 7 : factiontag = "\n|" + COLOR_RGB(200, 0, 0) + " RAIDs "; break;
			case 8:
			case 9:
			case 10:
			case 11:
			case 12:
			case 13:
			case 14:
			case 15:
			case 16:
			case 17:
			case 18:
			case 19:
			case 20:
			case 21:
			case 22: factiontag = "\n|" + COLOR_RGB(255, 255, 255) + " "; break;
			case 23 : factiontag = "\n|" + COLOR_RGB(14, 154, 233) + " V32 "; break;
			case 24:
			case 25:
			case 26:
			case 27:
			case 28:
			case 29:
			case 30:
			case 31:
			case 32:
			case 33:
			case 34:
			case 35:
			case 36:
			case 37:
			case 38:
			case 39:
			case 40:
			case 41:
			case 42:
			case 43:
			factiontag = "\n|" + COLOR_RGB(255, 255, 255) + " "; break;
			case 44 : factiontag = "\n|" + COLOR_RGB(64, 228, 208) + " Tech "; break;
			case 45 : factiontag = "\n|" + COLOR_RGB(136, 0, 200) + " T" + "|" + COLOR_RGB(215, 215, 215) + " T" + "|" + COLOR_RGB(0, 160, 25) + " A "; break;
			case 50 : factiontag = "\n|" + COLOR_RGB(54, 228, 32) + " TMG "; break;
			case 51 : factiontag = "\n|" + COLOR_RGB(178, 8, 29) + " USR "; break;
			case 54 : factiontag = "\n|" + COLOR_RGB(230, 150, 14) + " WASTE "; break;
			case 55 : factiontag = "\n|" + COLOR_RGB(255, 255, 9) + " Merc "; break;
			case 57 : factiontag = "\n|" + COLOR_RGB(19, 174, 19) + " GTs "; break;
			case 58 : factiontag = "\n|" + COLOR_RGB(170, 255, 170) + " FAL "; break;
			case 59 : factiontag = "\n|" + COLOR_RGB(255, 192, 203) + " -HK- "; break;
			case 80:
			case 81:
			case 82:
			case 83:
			case 84:
			case 85:
			case 86:
			case 87:
			case 88:
			case 89:
			case 90:
			case 91:
			case 92:
			case 93:
			case 94:
			case 95:
			case 96:
			case 97:
			case 98:
			case 99:
			factiontag = "\n|" + COLOR_RGB(255, 255, 255) + " "; break;
		//	case 102 : factiontag = "\n|" + COLOR_RGB(127, 51, 1) + " fingr "; break;
			//case 97 : factiontag = "\n|" + COLOR_RGB(255, 0, 0) + " MARMY "; break;
		//	case 113 : factiontag = "\n|" + COLOR_RGB(102, 51, 1) + " RP "; break;
		//	case 117 : factiontag = "\n|" + COLOR_RGB(255, 0, 0) + " TL "; break;
			/*case 45 : factiontag = "\n|" + COLOR_RGB(255, 0, 0) + " RDA "; break;
			case 47 : factiontag = "\n|" + COLOR_RGB(255, 255, 255) + " TWB "; break;
			case 50 : factiontag = "\n|" + COLOR_RGB(139, 0, 0) + " CF "; break;
			case 55 : factiontag = "\n|" + COLOR_RGB(125, 121, 202) + " TC "; break;
			case 56 : factiontag = "\n|" + COLOR_RGB(255, 255, 255) + " SB "; break;
			case 69 : factiontag = "\n|" + COLOR_RGB(255, 102, 102) + " KCR "; break;
			case 71 : factiontag = "\n|" + COLOR_RGB(59,23,118) + " THIEF "; break;
			case 73 : factiontag = "\n|" + COLOR_RGB(165, 136, 139) + " DAY "; break;
			case 101 : factiontag = "\n|" + COLOR_RGB(232,64,170) + " BF "; break;
			case 106 : factiontag = "\n|" + COLOR_RGB(0, 51, 0) + " DA "; break;
			case 109 : factiontag = "\n|" + COLOR_RGB(54, 232, 245) + " BSG "; break;
			*/
		/*	case 127 : factiontag = "\n|" + COLOR_RGB(220,20,60) + " TeaM "; break;
			case 141 : factiontag = "\n|" + COLOR_RGB(255,20,147) + " Meow "; break;
			case 142 : factiontag = "\n|" + COLOR_RGB( 254, 127, 156) + " ANIME "; break;
			case 160 : factiontag = "\n|" + COLOR_RGB(216,195,72) + " KILLs "; break;
			case 164 : factiontag = "\n|" + COLOR_RGB(233,233,233) + " kkk "; break;
			case 181 : factiontag = "\n|" + COLOR_RGB(55, 55, 55) + " BCD "; break;
			case 182 : factiontag = "\n|" + COLOR_RGB(125, 0, 0) + " COROX"; break;
			case 183 : factiontag = "\n|" + COLOR_RGB(64, 228, 208) + " Tech "; break;
			case 189 : factiontag = "\n|" + COLOR_RGB(184,134,11) + " DoW "; break;*/
			/*case 144 : factiontag = "\n|" + COLOR_RGB(0, 0, 205) + " SAL "; break;
			case 169 : factiontag = "\n|" + COLOR_RGB(201, 23, 22) + " A" + "|" + COLOR_RGB(245, 221, 0) + " A " ; break;
			
			case 188 : factiontag = "\n|" + COLOR_RGB(178,34,34) + " BOOM "; break;*/
			default:  factiontag = "\n|" + COLOR_RGB(255, 255, 255) + " NoTAG "; break;
			}
			
			if(factiontag == "\n|" + COLOR_RGB(255, 255, 255) + " NoTAG " && crs[i].Param[ST_TEAM_ID] > 200)
				factiontag = "\n|" + COLOR_RGB(255, 255, 255) + " ";
			if(valid(chosen) && _CritIsInjured(crs[i]))
			{
				crInjures = " ";
				crInjures += _CritDamaged(crs[i], DAMAGE_EYE) ? "E " : "";
                crInjures += _CritDamaged(crs[i], DAMAGE_RIGHT_ARM) ? "RA " : "";
                crInjures += _CritDamaged(crs[i], DAMAGE_LEFT_ARM) ? "LA " : "";
                crInjures += _CritDamaged(crs[i], DAMAGE_RIGHT_LEG) ? "RL " : "";
                crInjures += _CritDamaged(crs[i], DAMAGE_LEFT_LEG) ? "LL " : "";
				inj = "|" + COLOR_RGB(200, 0, 0) + crInjures + "\n"; 
			}
			else
				inj = "";
		}
		else 
		{
			crs[i].NameOnHead = name;
			continue;	
		}
		
		if(crs[i].IsPlayer() && crs[i].Param[ST_NPC_ROLE] == 300)
		{
		crs[i].NameOnHead = hp;
		}
		else
		crs[i].NameOnHead =  factiontag + inj + hp + mobDesc + playerDesc +  name;
		if(crs[i].Param[ST_NPC_ROLE] == 400)
		crs[i].NameOnHead = " ";
	}
}

void ChangeOnHeadAwarenessPlayer()	//export
{
	__ConfigShowPlayerAwareness = !__ConfigShowPlayerAwareness;
}

void ChangeOnHeadAwarenessNPC()	//export
{
	__ConfigShowNpcAwareness = !__ConfigShowNpcAwareness;
	__ShowNpcNames =  __ConfigShowNpcAwareness;
}