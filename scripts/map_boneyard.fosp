

int week_patch=1;
int doubleloot=1;
bool dropchance(float chance)
{
	if(chance==0)
	return false;
	if(Random(0,100)<chance)
	return true;
	
	return false;
	
}

bool can_tc_modoc=false;
bool can_tc_klamath=false;
bool can_tc_gecko=false;
bool can_tc_bh=false;
bool can_tc_redding=false;
bool can_tc_den=false;
bool can_tc_necro=false;
bool can_tc_reno=false;

uint when_tc_modoc=0;
uint when_tc_klamath=0;
uint when_tc_gecko=0;
uint when_tc_bh=0;
uint when_tc_redding=0;
uint when_tc_den=0;
uint when_tc_necro=0;
uint when_tc_reno

import void InitLogs()from"logging";
import void FLog(uint logindex,string&text)from"logging";
import void ILog(string&section,string&text)from"logging";
import void GMLog(Critter&cr,string&text)from"logging";
import void CloseLogs()from"logging";
import uint AddLog(string&filename)from"logging";
import uint AddLog(string&filename,uint index)from"logging";                                                         

import void WLog(string&type,string&message)from"debug";
import void WLog(string&type,string&message,int level)from"debug";
import void InitDebug()from"debug";          

import void InitEconomy()from"economy";
import void SendLevelThresholds(Critter&)from"economy"; 

import bool BankAccountExists(uint bankid,uint account)from"economy";
import bool BankAccountRemoveMoney(uint bankid,uint account,uint amount)from"economy";
import bool BankHasAccess(uint bankid,uint account,uint playerid)from"economy";
import int BankGetAccountBalance(uint bankid,uint account)from"economy";
import int BankGetAccountID(uint bankid,uint playerid)from"economy";
import uint BankAddAccess(uint bankid,uint account,uint playerid)from"economy";
import uint BankCreateAccount(uint bankid,uint playerid)from"economy";
import uint BankDepositMoney(uint bankid,uint playerid,uint account,int amount)from"economy";
import uint BankGetAccessCount(uint bankid,uint account)from"economy";
import uint BankGetAccountOwner(uint bankid,uint account)from"economy";
import uint BankGetAccountType(uint bankid,uint account)from"economy";
import uint BankGetCreditRating(uint bankid,uint account)from"economy";
import uint BankGetLoan(uint bankid,uint account)from"economy";
import uint BankRemoveAccess(uint bankid,uint account,uint playerid)from"economy";
import uint BankSetAccountType(uint bankid,uint account,uint accounttype)from"economy";
import uint BankSetCreditRating(uint bankid,uint account,uint rating)from"economy";
import uint BankSetLoan(uint bankid,uint account,uint loan)from"economy";
import uint BankTakeLoan(uint bankid,uint account,uint amount)from"economy";
import uint BankTransferMoney(uint bankid,uint fromaccount,uint toaccount,uint amount)from"economy";
import uint BankWithdrawMoney(uint bankid,uint playerid,uint account,int amount)from"economy"; 

import bool BanksTransferFromCritter(Critter&critter,uint amount,uint type,bool virtual)from"economy";
import bool BanksTransferToCritter(Critter&critter,uint amount,uint type,bool virtual)from"economy";
import uint BanksGetTotalMoney()from"economy";
import void BanksAddMoney(uint amount)from"economy";
import void BanksRemoveMoney(uint amount)from"economy"; 

import bool BankAddMoney(uint bankid,uint amount)from"economy";
import bool BankRemoveMoney(uint bankid,uint amount)from"economy";
import bool BankSetMoney(uint bankid,uint amount)from"economy";
import uint BankGetLoanInterest(uint bankid)from"economy";
import uint BankGetNumberOfAccounts(uint bankid)from"economy";
import float BankGetSaveInterest(uint bankid)from"economy";
import uint BankGetTotalMoney(uint bankid)from"economy";
import uint BankGetTotalBalance(uint bankid)from"economy";
import float BankGetReserveRatio(uint bankid)from"economy";
import uint BankSetLoanInterest(uint bankid,uint interest)from"economy";
import uint BankSetSaveInterest(uint bankid,float interest)from"economy";
import bool BankTransferFromCritter(uint bankId,Critter&critter,uint amount,uint type,bool virtual)from"economy";

import void SaveBankData()from"economy";   

import int GetItemSellModifier(Critter&player,Critter&trader)from"economy";
import int GetItemBuyModifier(Critter&player,Critter&trader)from"economy";
import uint GetItemCost(Item&item,Critter&cr,Critter&trader,bool sell)from"economy";
import uint GetItemCostPlain(Item&item,Critter&cr,Critter&trader)from"economy";

import array<int>GetTraderLevels(Critter@npc)from"economy";
import uint GetTraderLevel(Critter@npc,uint type)from"economy";

import uint ItemLevel(Item&item)from"economy";
import uint ItemLevel(uint pid)from"economy";
import uint TraderCapacity(Critter@npc)from"economy";
import uint TraderCapacity(Critter@npc,uint type,uint level)from"economy";
import uint TraderMoneyCapacity(Critter@npc)from"economy";
import uint TradingItemType(Item&item)from"economy";
import uint TradingItemType(uint pid)from"economy";                                                                                                          

const string@FD_Bank_Result2String(uint res)
{
	if(res==(1))
	return"FD_BANK_RESULT_SUCCESS";
	else if(res==(2))
	return"FD_BANK_RESULT_UNKNOWN";
	else if(res==(3))
	return"FD_BANK_RESULT_TOO_MANY_ACCOUNTS";
	else if(res==(4))
	return"FD_BANK_RESULT_ALREADY_HAS_ACCOUNT";
	else if(res==(5))
	return"FD_BANK_RESULT_NOT_ENOUGH_MONEY";
	else if(res==(6))
	return"FD_BANK_RESULT_BANK_FULL";
	else if(res==(7))
	return"FD_BANK_RESULT_BANK_EMPTY";
	else if(res==(8))
	return"FD_BANK_RESULT_DATA_ERROR";
	else if(res==(9))
	return"FD_BANK_RESULT_INVALID_PLAYER";
	else if(res==(10))
	return"FD_BANK_RESULT_NO_ACCOUNT";
	else
	return"FD_Result: Unknown error code";
}                                                                 

import void SaveAlertMaps()from"reinforcements";
import void SetAlertMap(Map&map,array<uint>@maxes)from"reinforcements";
import bool InitAlertMaps()from"reinforcements";
import bool IsAlertMap(Map&map)from"reinforcements";
import uint GetAlertLevel(Map&map)from"reinforcements";
import void ProcessDeath(Map&map,Critter&cr,Critter@killer)from"reinforcements";   

import void InitializeDynamicMob(Map&map)from"mob_dynamic";
import void InitializeDynamicMob(Map&map,bool withBoss)from"mob_dynamic";

void map_init(Map&map,bool firstTime)
{
	if(firstTime&&(map.GetProtoId()==(280)))  
	
	{
		uint[]maxes={15,10};
		SetAlertMap(map,maxes);
	}
	
	if(map.GetProtoId()==(280))
	{
		Critter@rewardgiver=map.GetNpc(205,(0x0F)|(0x20),0);
		if((@rewardgiver!=null))
		{
			rewardgiver.ParamBase[(532)]=1;
			rewardgiver.ParamBase[(511)]=1;
			rewardgiver.ParamBase[(512)]=1;
		}
	}
	
	if(map.GetProtoId()==(285))
	{
		array<Item@>multihexdoor;
		map.GetItems((3418),multihexdoor);
		
		for(uint k=0,l=multihexdoor.length;k<l;k++)
		{
			if(!(@multihexdoor[k]!=null))
			return;
			
			multihexdoor[k].Val8=400;
		}
		
	}
	
	if(map.GetProtoId()==(280)&&firstTime) 
	
	InitializeDynamicMob(map);
	
	if(map.GetProtoId()==(285))
	{
		array<Item@>multihexdoor;
		map.GetItems((4768),multihexdoor);
		
		for(uint k=0,l=multihexdoor.length;k<l;k++)
		{
			if(!(@multihexdoor[k]!=null))
			return;
			
			multihexdoor[k].Val8=400;
		}
		if(firstTime)InitializeDynamicMob(map);
	}
	if(firstTime&&map.GetProtoId()==(286))InitializeDynamicMob(map,true);
}

uint e_PushForward(array<uint>@sometrash)
{
	return 0;
}

uint e_SetCountDownToRide(array<uint>@sometrash)
{
	return 0;
}

bool s_WaterPump(Critter&player,Scenery&table,int skill,Item@item)
{
	if(!(@item!=null))
	{
		if(skill==(213))
		{
			player.Say((11),"You don't think it can be done without some tools");
			return true;
		}
		return false;
	}
	
	int bonus=0;
	if(item.GetProtoId()==(75))
	bonus=25;
	else if(item.GetProtoId()==(308))
	bonus=50;
	else
	return false;
	
	GameVar@var=GetLocalVar((7042),player.Id);
	if(!(@var!=null))
	return false;
	
	if(var.GetValue()!=1)
	return false;
	
	int chance=(((player.Param[(213)]+bonus)>(95))?(95):(((player.Param[(213)]+bonus)<(5))?(5):(player.Param[(213)]+bonus)));
	if(chance>Random(0,99))
	{
		var=2;
		
		player.Say((11),"A faint noise can be heard out of the machine. You've managed it to fix the water pump.");
		
	}
	else
	{
		var=3;
		
		player.Say((11),"A loud noise can be heard from the inside. It seems like you've failed to repair the water pump.");
		
	}
	return true;
}   

bool s_Well(Critter&player,Scenery&table,int skill,Item@item)
{
	GameVar@var=GetLocalVar((7042),player.Id);
	if(!(@var!=null))
	return false;  
	
	if(var!=1)
	return false;  
	
	if((@item!=null))
	{
		uint16 tool=item.GetProtoId();
		if(tool!=(75)&&tool!=(308))
		return false;
	}
	else
	{
		if(skill!=(213))
		return false;
	}  
	
	array<Critter@>npcs;
	
	if(player.GetMap().GetCritters(0,(0x20)|(0x01),npcs)==0)
	{
		return false;
	}
	
	for(uint i=0,j=npcs.length();i<j;i++)
	{
		if(npcs[i].Param[(104)]==9448)
		{
			if(player.IsSeenBy(npcs[i]))
			{
				npcs[i].SayMsg((2),(1),(1000000000+(9448)*100000+(1)));
				return true;
			}
		}
	}
	return false;
}
