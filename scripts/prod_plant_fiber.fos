//
// FOnline: 2238
// Rotators
//
// prod_plant_fiber.fos
//

#include "_macros.fos"
#include "production_h.fos"
#include "prod_plant_h.fos"

#define TEXT          (3045)
#define TEXT_EMPTY    (3049)

int TotalCount = 0;
int TotalCountHQ = 0;

void item_init(Item& item, bool firstTime)
{
    item.SetEvent(ITEM_EVENT_USE_ON_ME, "_UseItemOnPlant");
    item.SetEvent(ITEM_EVENT_SKILL, "_UseSkill");
    item.SetEvent(ITEM_EVENT_FINISH, "_Finish");
    if(firstTime)
        AMOUNT(item) = __FibreCapacity;
    TotalCount++;
    StartRegeneration(item, "e_Regen");
}
void _EncPlant(Item& item, bool firstTime)
{
    item.SetEvent(ITEM_EVENT_USE_ON_ME, "_UseItemOnPlant");
    if(firstTime)
        AMOUNT(item) = __FibreCapacity;
}
void _Finish(Item& item, bool)
{
    TotalCount--;
    ReduceCounter(PID_FIBER, COUNTER(item));
}
uint e_Regen(array<uint>@ values)
{
    //Item@ item = GetItem(values[0]);
    //if(!valid(item))
   //     return 0;
    //Regenerate(item, PID_FIBER, __FibreCapacity, __FibreRegen, TotalCount);
	Item@ item = GetItem(values[0]);
    if(!valid(item))
        return 0;
    //Regenerate(item, PID_ELECTRONIC_PARTS, __ElectronicPartsCap, __ElectronicPartsRegen, ComputerCount);
	if(item.Val1<20) item.Val1=MIN(20,item.Val1+2);
    return RegenerationInterval;
}
bool _UseSkill(Item&, Critter& cr, int)
{
    cr.SayMsg(SAY_NETMSG, TEXTMSG_TEXT, 3046);     // you need knife...
    return true;
}

bool _UseItemOnPlant(Item& item, Critter& cr, Item@ usedItem)
{
    if(!valid(usedItem))
        return false;
    uint pid = usedItem.GetProtoId();
    if(pid == PID_KNIFE || pid == PID_COMBAT_KNIFE || pid == PID_LIL_JESUS_WEAPON || pid == PID_THROWING_KNIFE)
        return Gather(item, cr, usedItem, PID_FIBER, __FibreBatch, TEXT, TEXT_EMPTY, null);
    return false;
}

// HQ_FIBRE

void item_init_hq(Item& item, bool firstTime)
{
    item.SetEvent(ITEM_EVENT_USE_ON_ME, "_UseItemOnPlant_HQ");
    item.SetEvent(ITEM_EVENT_SKILL, "_UseSkill_HQ");
    item.SetEvent(ITEM_EVENT_FINISH, "_Finish_HQ");
    if(firstTime)
        AMOUNT(item) = __FibreCapacity;
    TotalCountHQ++;
    StartRegeneration(item, "e_Regen_HQ");
}

void _Finish_HQ(Item& item, bool)
{
    TotalCountHQ--;
    ReduceCounter(PID_FIBRE2, COUNTER(item));
}
uint e_Regen_HQ(array<uint>@ values)
{
    //Item@ item = GetItem(values[0]);
    //if(!valid(item))
   //     return 0;
    //Regenerate(item, PID_FIBER, __FibreCapacity, __FibreRegen, TotalCount);
	Item@ item = GetItem(values[0]);
    if(!valid(item))
        return 0;
    //Regenerate(item, PID_ELECTRONIC_PARTS, __ElectronicPartsCap, __ElectronicPartsRegen, ComputerCount);
	if(item.Val1<20) item.Val1=MIN(20,item.Val1+2);
    return RegenerationInterval;
}
bool _UseSkill_HQ(Item&, Critter& cr, int)
{
    cr.SayMsg(SAY_NETMSG, TEXTMSG_TEXT, 3046);     // you need knife...
    return true;
}

bool _UseItemOnPlant_HQ(Item& item, Critter& cr, Item@ usedItem)
{
    if(!valid(usedItem))
        return false;
    uint pid = usedItem.GetProtoId();
    if(pid == PID_KNIFE || pid == PID_COMBAT_KNIFE || pid == PID_LIL_JESUS_WEAPON || pid == PID_THROWING_KNIFE)
        return Gather(item, cr, usedItem, PID_FIBRE2, __FibreBatch, TEXT, TEXT_EMPTY, null);
    return false;
}
