

int week_patch=1;
int doubleloot=1;
bool dropchance(float chance)
{
	if(chance==0)
	return false;
	if(Random(0,100)<chance)
	return true;
	
	return false;
	
}

bool can_tc_modoc=false;
bool can_tc_klamath=false;
bool can_tc_gecko=false;
bool can_tc_bh=false;
bool can_tc_redding=false;
bool can_tc_den=false;
bool can_tc_necro=false;
bool can_tc_reno=false;

uint when_tc_modoc=0;
uint when_tc_klamath=0;
uint when_tc_gecko=0;
uint when_tc_bh=0;
uint when_tc_redding=0;
uint when_tc_den=0;
uint when_tc_necro=0;
uint when_tc_reno=0;   

int[][]PerksData={
	{300,1,1},
	{
	},
	
	{
	},
	{
	}, 
	
	{301,1,1},
	{
	},
	
	{
	},
	{
	}, 
	
	{302,0,1},
	{
		77,1,18,
		77,0,50,
	},
	
	{
	},
	{
	}, 
	
	{303,0,1},
	{
		77,1,3,
		77,0,50,
	},
	
	{
	},
	{
	}, 
	
	{304,0,1},
	{
		77,1,3,
		5,1,6,
		77,0,50,
	},
	
	{
	},
	{
	}, 
	
	{305,0,2},
	{
		77,1,9,
		77,0,50,
	},
	{
		77,1,12,
		77,0,50,
	},
	
	{
	},
	{
	},
	{
	},
	{
	}, 
	
	{306,0,1},
	{
		77,1,18,
		77,0,50,
	},
	
	{
	},
	{
	}, 
	
	{307,0,1},
	{
		77,1,3,
		1,1,5,
		77,0,50,
	},
	
	{
	},
	{
	}, 
	
	{308,0,1},
	{
		207,1,75,
		77,0,50,
	},
	
	{
	},
	{
	}, 
	
	{309,0,1},
	{
		77,1,3,
		77,0,50,
	},
	
	{
	},
	{
	}, 
	
	{310,1,1},
	{
	},
	
	{
		
	},
	{
	}, 
	
	{311,1,1},
	{
	},
	
	{
	},
	{
	}, 
	
	{312,1,1},
	{
		4,1,4,
		207,1,100,
	},
	
	{
	},
	{
	}, 
	
	{313,0,2},
	{
		77,1,6,
		2,1,4,
		77,0,50,
	},
	{
		77,1,9,
		2,1,6,
		77,0,50,
	},
	
	{
	},
	{
	},
	{
	},
	{
	}, 
	
	{314,1,1},
	{
		77,1,6,
		2,1,6,
		
	},
	
	{
		11,1,22650,
	},
	{
	}, 
	
	{315,0,1},
	{
		77,1,9,
		77,0,50,
	},
	
	{
	},
	{
	}, 
	
	{316,0,1},
	{
		77,1,6,
		208,1,100,
		77,0,50,
	},
	
	{
	},
	{
	}, 
	
	{317,2,1},
	{
		217,1,125,
	},
	
	{
	},
	{
		-1
	}, 
	
	{318,2,1},
	{
	},
	
	{
	},
	{
		-1
	}, 
	
	{319,1,1},
	{
		4,1,8,
		212,1,100,
	},
	
	{
	},
	{
	}, 
	
	{320,0,1},
	{
		77,1,3,
		206,1,75,
		77,0,50,
	},
	
	{
	},
	{
	}, 
	
	{321,1,1},
	{
	},
	
	{
	},
	{
	}, 
	
	{322,0,1},
	{
		77,1,12,
		77,0,50,
	},
	
	{
	},
	{
	}, 
	
	{323,1,2},
	{
	},
	{
	},
	
	{
	},
	{
	},
	{
	},
	{
	}, 
	
	{324,1,1},
	{
	},
	
	{
	},
	{
	}, 
	
	{325,1,1},
	{
	},
	
	{
	},
	{
	}, 
	
	{326,0,1},
	{
		77,1,15,
		208,1,125,
		77,0,50,
	},
	
	{
	},
	{
	}, 
	
	{327,0,1},
	{
		77,1,12,
		5,1,6,
		77,0,50,
	},
	
	{
	},
	{
	}, 
	
	{328,1,1},
	{
	},
	
	{
	},
	{
	}, 
	
	{329,0,3},
	{
		77,1,12,
		2,1,5,
		77,0,50,
	},
	{
		77,1,15,
		2,1,6,
		77,0,50,
	},
	{
		77,1,18,
		2,1,7,
		77,0,50,
	},
	
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	}, 
	
	{330,0,1},
	{
		77,1,3,
		5,1,8,
		77,0,50,
	},
	
	{
	},
	{
	}, 
	
	{331,1,1},
	{
		2,1,6,
		217,1,75,
	},
	
	{
	},
	{
	}, 
	
	{332,1,1},
	{
		213,1,150,
	},
	
	{
	},
	{
	}, 
	
	{333,0,1},
	{
		77,1,15,
		206,1,100,
		77,0,50,
	},
	
	{
	},
	{
	}, 
	
	{334,1,1},
	{
		210,1,125,
	},
	
	{
	},
	{
	}, 
	
	{335,1,1},
	{
		214,1,125,
	},
	
	{
	},
	{
	}, 
	
	{336,0,1},
	{
		77,1,6,
		205,1,100,
		77,0,50,
	},
	
	{
	},
	{
	}, 
	
	{337,1,1},
	{
	},
	
	{
	},
	{
	}, 
	
	{338,1,1},
	{
		210,1,125,
	},
	
	{
	},
	{
	}, 
	
	{339,0,1},
	{
		77,1,6,
		208,1,80,
		77,0,50,
	},
	
	{
	},
	{
	}, 
	
	{340,1,1},
	{
	},
	
	{
	},
	{
	}, 
	
	{341,1,1},
	{
	},
	
	{
	},
	{
	}, 
	
	{342,1,1},
	{
		217,1,150,
	},
	
	{
	},
	{
	}, 
	
	{343,1,1},
	{
	},
	
	{
	},
	{
	}, 
	
	{344,1,1},
	{
		217,1,175,
	},
	
	{
	},
	{
	}, 
	
	{345,1,1},
	{
	},
	
	{
	},
	{
	}, 
	
	{346,1,1},
	{
		217,1,150,
	},
	
	{
	},
	{
	}, 
	
	{347,1,1},
	{
	},
	
	{
	},
	{
	}, 
	
	{348,1,1},
	{
		217,1,100,
	},
	
	{
	},
	{
	}, 
	
	{349,0,1},
	{
		77,1,3,
		5,1,5,
		77,0,50,
	},
	
	{
	},
	{
	}, 
	
	{350,0,1},
	{
		77,1,6,
		5,1,10,
		77,0,50,
	},
	
	{
	},
	{
	}, 
	
	{351,1,1},
	{
		4,1,6,
		212,1,50,
	},
	
	{
	},
	{
	}, 
	
	{352,2,1},
	{
	},
	
	{
	},
	{
	}, 
	
	{353,2,1},
	{
	},
	
	{
	},
	{
	}, 
	
	{354,0,25},
	
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,}, 
	
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1}, 
	
	{355,0,25},
	
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,}, 
	
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1}, 
	
	{356,0,25},
	
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,}, 
	
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1}, 
	
	{357,1,3},
	{
	},
	{
	},
	{
	},
	
	{
	},
	{
	},
	{
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	}, 
	
	{358,1,3},
	{
	},
	{
	},
	{
	},
	
	{
	},
	{
	},
	{
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	}, 
	
	{359,1,3},
	{
	},
	{
	},
	{
	},
	
	{
	},
	{
	},
	{
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	}, 
	
	{360,1,3},
	{
	},
	{
	},
	{
	},
	
	{
	},
	{
	},
	{
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	}, 
	
	{361,0,10},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,}, 
	
	{},{},{},{},{},
	{},{},{},{},{},
	
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1}, 
	
	{362,0,25},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,}, 
	
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1}, 
	
	{363,0,25},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,}, 
	
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1}, 
	
	{364,0,25},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,}, 
	
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1}, 
	
	{380,0,1},
	{
		77,1,3,
		0,1,6,
		77,0,50,
	},
	
	{
	},
	{
		-1
	}, 
	
	{381,1,1},
	{
		1,1,6,
		217,1,100,
		
	},
	
	{
	},
	{
		-1
	}, 
	
	{382,2,1},
	{
	},
	
	{
	},
	{
		-1
	}, 
	
	{383,1,1},
	{
		211,1,125,
	},
	
	{
	},
	{
		-1
	}, 
	
	{384,2,1},
	{
	},
	
	{
	},
	{
		-1
	}, 
	
	{385,0,1},
	{
		77,1,3,
		0,0,19,
		77,0,50,
	},
	
	{
		
	},
	{
		
	}, 
	
	{386,0,1},
	{
		77,1,3,
		1,0,19,
		77,0,50,
	},
	
	{
		
	},
	{
		
	}, 
	
	{387,0,1},
	{
		77,1,3,
		2,0,19,
		77,0,50,
	},
	
	{
		
	},
	{
		
	}, 
	
	{388,0,1},
	{
		77,1,3,
		3,0,19,
		77,0,50,
	},
	
	{
		
	},
	{
		
	}, 
	
	{389,0,1},
	{
		77,1,3,
		4,0,19,
		77,0,50,
	},
	
	{
		
	},
	{
		
	}, 
	
	{390,0,1},
	{
		77,1,3,
		5,0,19,
		77,0,50,
	},
	
	{
		
	},
	{
		
	}, 
	
	{391,0,1},
	{
		77,1,3,
		6,0,19,
		77,0,50,
	},
	
	{
		
	},
	{
		
	}, 
	
	{392,1,1},
	{
		3,1,6,
		210,1,125,
	},
	
	{
	},
	{
		
	}, 
	
	{393,2,1},
	{
	},
	
	{
	},
	{
		-1
	}, 
	
	{394,0,1},
	{
		77,1,6,
		77,0,50,
		
	},
	
	{
	},
	{
		
	}, 
	
	{395,2,1},
	{
	},
	
	{
	},
	{
		
	}, 
	
	{396,2,1},
	{
	},
	
	{
	},
	{
		
	}, 
	
	{397,1,1},
	{
		211,1,50,
	},
	
	{
	},
	{
		
	}, 
	
	{398,0,1},
	{
		77,1,12,
		206,1,100,
		77,0,50,
	},
	
	{
	},
	{
		
	}, 
	
	{399,1,1},
	{
		214,1,100,
	},
	
	{
	},
	{
		
	}, 
	
	{400,1,1},
	{
		215,1,125,
	},
	
	{
	},
	{
		
	}, 
	
	{401,1,1},
	{
		77,1,3,
		4,1,1,
	},
	
	{
	},
	{
		
	}, 
	
	{402,0,2},
	{
		77,1,9,
		201,1,100,
		77,0,50,
	},
	{
		77,1,15,
		201,1,150,
		77,0,50,
	},
	
	{
	},
	{
	},
	{
		
	},
	{
		
	}, 
	
	{403,0,1},
	{
		77,1,3,
		5,1,6,
		77,0,50,
	},
	
	{
	},
	{
		
	}, 
	
	{404,2,1},
	{
		215,1,75,
	},
	
	{
	},
	{
		
	}, 
	
	{405,0,1},
	{
		77,1,9,
		0,1,5,
		77,0,50,
	},
	
	{
	},
	{
		
	}, 
	
	{406,1,1},
	{
		210,1,100,
	},
	
	{
	},
	{
		
	}, 
	
	{407,0,1},
	{
		77,1,3,
		77,0,50,
	},
	
	{
	},
	{
		
	}, 
	
	{408,2,1},
	{
	},
	
	{
	},
	{
		
	},
	
	{410,0,1},
	{
		77,1,9,
		10,1,20,
		77,0,50,
	},
	
	{
	},
	{
	},
	
	{411,0,1},
	{
		77,1,3,
		0,1,7,
		77,0,50,
	},
	
	{
	},
	{
	}, 
	
	{417,2,1},
	{
	},
	
	{
	},
	{
		
	}, 
	
	{419,2,1},
	{
	},
	
	{
	},
	{
		
	}, 
	
	{420,2,1},
	{
	},
	
	{
	},
	{
		
	}, 
	
	{421,2,1},
	{
		77,1,6,
		2,1,6,
	},
	
	{
	},
	{
		
	}, 
	
	{422,0,1},
	{
		77,1,3,
		0,1,6,
		77,0,50,
	},
	
	{
	},
	{
		
	}, 
	
	{423,0,1},
	{
		77,1,15,
		2,1,8,
		77,0,50,
	},
	
	{
	},
	{
		
	}, 
	
	{424,0,1},
	{
		77,1,6,
		77,0,50,
	},
	
	{
		14,1,10,
	},
	{
		
	}, 
	
	{425,0,1},
	{
		77,1,15,
		77,0,50,
	},
	
	{
	},
	{
		
	}, 
	
	{426,2,1},
	{
	},
	
	{
	},
	{
		
	}, 
	
	{427,0,1},
	{
		77,1,6,
		77,0,50,
	},
	
	{
	},
	{
		
	}, 
	
	{428,0,1},
	{
		77,1,15,
		77,0,50,
	},
	
	{
	},
	{
		
	}, 
	
	{429,0,1},
	{
		77,1,3,
		5,1,6,
		77,0,50,
	},
	
	{
	},
	{
		
	}, 
	
	{430,1,1},
	{
		217,1,100,
	},
	
	{
	},
	{
		-1
	}, 
	
	{431,1,3},
	{
	},
	{
	},
	{
	},
	
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	}, 
	
	{432,1,2},
	{
	},
	{
	},
	
	{
		
	},
	{
		
	},
	{
		-1
	},
	{
		-1
	}, 
	
	{433,1,1},
	{
	},
	
	{
		
	},
	{
		-1
	}, 
	
	{434,1,2},
	{
	},
	{
	},
	
	{
		
	},
	{
		
	},
	{
		-1
	},
	{
		-1
	}, 
	
	{435,1,1},
	{
	},
	
	{
		
	},
	{
		-1
	}, 
	
	{436,0,1},
	{
		77,1,9,
		77,0,50,
	},
	
	{
	},
	{
		-1
	}, 
	
	{437,0,1},
	{
		77,1,9,
		5,1,8,
		77,0,50,
	},
	
	{
		
	},
	{
		-1
	}, 
	
	{438,2,1},
	{
		77,1,9,
		2,1,6,
		77,0,50,
	},
	
	{
		
	},
	{
		-1
	}, 
	
	{439,0,25},
	
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,}, 
	
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1}, 
	
	{440,0,25},
	
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,}, 
	
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1}, 
	
	{441,1,1},
	{
		77,1,3,
		208,1,75,
	},
	
	{
	},
	{
		-1
	}, 
	
	{442,0,25},
	
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,}, 
	
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1}, 
	
	{443,2,1},
	{
	},
	
	{
	},
	{
		-1
	}, 
	
	{444,0,1},
	{
		77,1,9,
		77,0,50,
	},
	
	{
	},
	{
		-1
	}, 
	
	{445,0,1},
	{
		77,1,12,
		77,0,50,
	},
	
	{
	},
	{
		-1
	}, 
	
	{446,0,1},
	{
		77,1,15,
		77,0,50,
	},
	
	{
	},
	{
		-1
	}, 
	
	{447,0,25},
	
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,}, 
	
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1}, 
	
	{448,0,25},
	
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,}, 
	
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1}, 
	
	{449,0,25},
	
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,}, 
	
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1}, 
	
	{450,1,1},
	{
		214,1,75,
	},
	
	{
	},
	{
		-1
	}, 
	
	{451,0,25},
	
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,}, 
	
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1}, 
	
	{452,0,25},
	
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,}, 
	
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1}, 
	
	{453,0,5},
	
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,}, 
	
	{},{},{},{},{},
	
	{-1},{-1},{-1},{-1},{-1}, 
	
	{454,1,1},
	{
		208,1,100,
		213,1,100,
	},
	
	{
	},
	{
		-1
	}, 
	
	{455,1,1},
	{
		213,1,75,
	},
	
	{
	},
	{
		-1
	}, 
	
	{456,1,1},
	{
		212,1,150,
	},
	
	{
	},
	{
		-1
	}, 
	
	{457,0,25},
	
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,}, 
	
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	
	{458,0,50},
	
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,}, 
	
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1}, 
	
	{459,1,1},
	{
		209,1,150,
	},
	
	{
	},
	{
		-1
	}, 
	
	{460,0,25},
	
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},
	{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,},{77,1,55,}, 
	
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	{},{},{},{},{},
	
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1},
	{-1},{-1},{-1},{-1},{-1}, 
	
	{461,1,1},
	{
		4,1,5,
		207,1,50,
	},
	
	{
	},
	{
		-1
	},
	
	{462,1,3},
	{
	},
	{
	},
	{
	},
	
	{
		7,1,20,
	},
	{
		7,1,20,
		13,1,15,
	},
	{
		7,1,20,
		196,1,5,
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	}, 
	
	{463,1,12},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},  
	
	{464,1,12},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	}, 
	
	{465,1,12},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	}, 
	
	{466,1,12},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	},
	{
		-1
	}, 
	
	{467,1,12},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	{
	},
	
	{
		
	},{
		
	},{
		
	},{
		
	},{
		
	},{
		
	},
	{
		
	},{
		
	},{
		
	},{
		
	},{
		
	},{
		
	},
	{
		-1
	},{
		-1
	},{
		-1
	},{
		-1
	},{
		-1
	},{
		-1
	},
	{
		-1
	},{
		-1
	},{
		-1
	},{
		-1
	},{
		-1
	},{
		-1
	}, 
	
	{468,1,12},
	{
	},{
	},{
	},{
	},{
	},{
	},
	{
	},{
	},{
	},{
	},{
	},{
	},
	
	{
		
	},{
		
	},{
		
	},{
		
	},{
		
	},{
		
	},
	{
		
	},{
		
	},{
		
	},{
		
	},{
		
	},{
		
	},
	{
		-1
	},{
		-1
	},{
		-1
	},{
		-1
	},{
		-1
	},{
		-1
	},
	{
		-1
	},{
		-1
	},{
		-1
	},{
		-1
	},{
		-1
	},{
		-1
	}, 
	
	{469,1,12},
	{
	},{
	},{
	},{
	},{
	},{
	},
	{
	},{
	},{
	},{
	},{
	},{
	},
	
	{
		
	},{
		
	},{
		
	},{
		
	},{
		
	},{
		
	},
	{
		
	},{
		
	},{
		
	},{
		
	},{
		
	},{
		
	},
	{
		-1
	},{
		-1
	},{
		-1
	},{
		-1
	},{
		-1
	},{
		-1
	},
	{
		-1
	},{
		-1
	},{
		-1
	},{
		-1
	},{
		-1
	},{
		-1
	},
	
	{-1,-1,-1}
}; 

funcdef bool SatisfiesFunc(Critter&cr,int perk,int level,int p0,int p1,int p2);
funcdef void ProcessFunc(Critter&cr,int perk,int level,int p0,int p1,int p2);

class Requirement
{
	uint16 Param;
	bool Atleast;
	int Value;
	
	Requirement(uint16 param,bool atleast,int value)
	{
		Param=param;
		Atleast=atleast;
		Value=value;
	}
	bool Satisfies(Critter@cr)
	{
		if(Atleast)
		return cr.Param[Param]>=Value;
		else
		return cr.Param[Param]<=Value;
	}
}; 

class Effect
{
	uint16 Param;
	bool Increase;
	int Value;
	
	Effect(uint16 param,bool increase,int value)
	{
		Param=param;
		Increase=increase;
		Value=value;
	}
	void Process(Critter@cr)
	{
		if(Increase)
		cr.ParamBase[Param]=cr.ParamBase[Param]+Value;
		else
		cr.ParamBase[Param]=cr.ParamBase[Param]-Value;
	}
};

class LevelData
{
	array<Requirement>Requirements;
	
	array<Effect>UpEffects;
	array<Effect>DownEffects;
	
	bool Satisfies(Critter@cr)
	{
		for(uint i=0,j=Requirements.length();i<j;i++)
		if(!Requirements[i].Satisfies(cr))
		return false;
		return true;
	}
	
	void ProcessUp(Critter@cr)
	{
		for(uint i=0,j=UpEffects.length();i<j;i++)
		UpEffects[i].Process(cr);
	}
	void ProcessDown(Critter@cr)
	{
		for(uint i=0,j=DownEffects.length();i<j;i++)
		DownEffects[i].Process(cr);
	}
	
};

class PerkData
{
	int Id;
	int Range;
	int Type;
	SatisfiesFunc@SatisfiesF;
	
	ProcessFunc@ProcessUpF;
	ProcessFunc@ProcessDownF;
	
	int p0;
	int p1;
	int p2;
	
	PerkData()
	{
		Id=0;
		Range=0;
		Type=2;
		@SatisfiesF=null;
		
		@ProcessUpF=null;
		@ProcessDownF=null;
		
	}
	
	array<LevelData>Levels;
	
	bool Check(Critter@cr,int level)
	{
		if(level>=Range)
		return false;
		return Levels[level].Satisfies(cr)&&(!(@SatisfiesF!=null)||SatisfiesF(cr,Id,level,p0,p1,p2));
	}
	
	void ProcessUp(Critter@cr,int fromlevel)
	{
		if(fromlevel>=int(Range)||fromlevel<0)
		return;
		Levels[fromlevel].ProcessUp(cr);
		if((@ProcessUpF!=null))
		ProcessUpF(cr,Id,fromlevel,p0,p1,p2);
	}
	void ProcessDown(Critter@cr,int tolevel)
	{
		if(tolevel>=int(Range)||tolevel<0)
		return;
		Levels[tolevel].ProcessDown(cr);
		if((@ProcessUpF!=null))
		ProcessDownF(cr,Id,tolevel,p0,p1,p2);
	}
	
	void CustomSatisfies(SatisfiesFunc@func,int _p0,int _p1,int _p2)
	{
		@SatisfiesF=func;
		p0=_p0;
		p1=_p1;
		p2=_p2;
	}
};  

import int NextLevelNeedExp(Critter&cr)from"parameters";

bool d_PerkCheck(Critter&player,Critter@npc,int perk)
{
	return PerkCheck(player,perk,true);
}

bool d_PerkCheckFalse(Critter&player,Critter@npc,int perk)
{
	return!PerkCheck(player,perk,true);
}

bool d_ProfessionPerkCheck(Critter&player,Critter@npc,int perk,int level)
{
	if(player.ParamBase[perk]!=level)
	return false;
	return PerkCheck(player,perk,true);
}

bool d_ProfessionCheck(Critter&player,Critter@npc,int perk)
{
	return AssertProfessions(player);
} 

array<PerkData>Perks;

void InitPerks()
{
	int i=0;
	do
	{
		array<int>@header=PerksData[i];
		int id=header[0];
		if(id==-1)
		break;
		if(int(Perks.length())<=id)
		Perks.resize(id+1);
		PerkData@perk=Perks[id];
		perk.Id=id;
		perk.Type=header[1];
		perk.Range=header[2];
		perk.Levels.resize(perk.Range);
		for(int clev=0;clev<perk.Range;clev++)
		{
			i++;
			perk.Levels[clev].Requirements.resize(PerksData[i].length()/3);
			for(uint j=0,k=perk.Levels[clev].Requirements.length();j<k;j++)
			{
				perk.Levels[clev].Requirements[j].Param=PerksData[i][3*j];
				perk.Levels[clev].Requirements[j].Atleast=PerksData[i][3*j+1]!=0;
				perk.Levels[clev].Requirements[j].Value=PerksData[i][3*j+2];
			}
		}
		
		for(int clev=0;clev<perk.Range;clev++)
		{
			i++;
			perk.Levels[clev].UpEffects.resize(PerksData[i].length()/3);
			for(uint j=0,k=perk.Levels[clev].UpEffects.length();j<k;j++)
			{
				perk.Levels[clev].UpEffects[j].Param=PerksData[i][3*j];
				perk.Levels[clev].UpEffects[j].Increase=PerksData[i][3*j+1]!=0;
				perk.Levels[clev].UpEffects[j].Value=PerksData[i][3*j+2];
			}
		}
		
		for(int clev=0;clev<perk.Range;clev++)
		{
			i++;
			if(PerksData[i].length()==1)
			{
				perk.Levels[clev].DownEffects.resize(perk.Levels[clev].UpEffects.length());
				for(uint j=0,k=perk.Levels[clev].UpEffects.length();j<k;j++)
				{
					perk.Levels[clev].DownEffects[j].Param=perk.Levels[clev].UpEffects[j].Param;
					perk.Levels[clev].DownEffects[j].Increase=!perk.Levels[clev].UpEffects[j].Increase;
					perk.Levels[clev].DownEffects[j].Value=perk.Levels[clev].UpEffects[j].Value;
				}
				continue;
			}
			perk.Levels[clev].UpEffects.resize(PerksData[i].length()/3);
			for(uint j=0,k=perk.Levels[clev].DownEffects.length();j<k;j++)
			{
				perk.Levels[clev].DownEffects[j].Param=PerksData[i][3*j];
				perk.Levels[clev].DownEffects[j].Increase=PerksData[i][3*j+1]!=0;
				perk.Levels[clev].DownEffects[j].Value=PerksData[i][3*j+2];
			}
		}
		
		i++;
	}
	while(true);   
	
	Perks[(309)].CustomSatisfies(@_OrRangedSkill,0,0,100);
	Perks[(424)].CustomSatisfies(@_OrRangedSkill,0,0,125);
	Perks[(315)].CustomSatisfies(@_OrRangedSkill,0,0,150);
	Perks[(322)].CustomSatisfies(@_OrRangedSkill,0,0,175);
	Perks[(425)].CustomSatisfies(@_OrRangedHtHSkill,0,0,200);
	Perks[(306)].CustomSatisfies(@_OrRangedSkill,0,0,180);
	Perks[(407)].CustomSatisfies(@_OrRangedSkill,0,0,100);
	Perks[(426)].CustomSatisfies(@_OrRangedGunSkill,0,0,125);
	Perks[(427)].CustomSatisfies(@_OrRangedSkill,0,0,125);
	Perks[(428)].CustomSatisfies(@_OrRangedSkill,0,0,200); 
	
	Perks[(305)].CustomSatisfies(@_BRD,0,0,0);
	Perks[(394)].CustomSatisfies(@_OrSkill,(203),(204),75);
	Perks[(436)].CustomSatisfies(@_OrSkill,(203),(204),150);
	Perks[(303)].CustomSatisfies(@_OrSkill,(203),(204),75);
	Perks[(443)].CustomSatisfies(@_OrSkill,(203),(204),100);
	Perks[(444)].CustomSatisfies(@_OrSkill,(203),(204),125);
	Perks[(445)].CustomSatisfies(@_OrRangedHtHSkill,0,0,150);
	Perks[(446)].CustomSatisfies(@_OrSkill,(203),(204),175);
	Perks[(302)].CustomSatisfies(@_OrSkill,(203),(204),180);
	Perks[(301)].CustomSatisfies(@_Awareness,0,0,0);
	
	@Perks[(335)].ProcessUpF=_SpeakerUp;
	@Perks[(335)].ProcessDownF=_SpeakerDown;
	
}

bool PerkCheck(Critter&cr,uint perk,bool always)
{
	if(perk>=Perks.length()||Perks[perk].Type==2)
	return false;
	return(always||Perks[perk].Type==0)&&Perks[perk].Check(cr,cr.Param[perk]);
}

bool SupportPerkCheck(Critter&cr,uint perk)
{
	if(perk>=Perks.length()||Perks[perk].Type!=1)
	return false;
	return Perks[perk].Check(cr,cr.Param[perk]);
} 

void PerkUp(Critter&cr,uint perk,int fromlevel)
{
	if(perk>=Perks.length())
	return;
	Perks[perk].ProcessUp(cr,fromlevel);
}

void PerkDown(Critter&cr,uint perk,int tolevel)
{
	if(perk>=Perks.length())
	return;
	Perks[perk].ProcessDown(cr,tolevel);
}  

bool _OrSkill(Critter&cr,int perk,int level,int skill1,int skill2,int minskill)
{
	return cr.Param[skill1]>=minskill||cr.Param[skill2]>=minskill;
}

bool _OrRangedSkill(Critter&cr,int perk,int level,int,int,int minskill)
{
	return cr.Param[(200)]>=minskill||cr.Param[(201)]>=minskill||
	cr.Param[(202)]>=minskill||cr.Param[(205)]>=minskill;
}

bool _OrRangedGunSkill(Critter&cr,int perk,int level,int,int,int minskill)
{
	return cr.Param[(200)]>=minskill||cr.Param[(201)]>=minskill||
	cr.Param[(202)]>=minskill;
}

bool _OrRangedHtHSkill(Critter&cr,int perk,int level,int,int,int minskill)
{
	return cr.Param[(200)]>=minskill||cr.Param[(201)]>=minskill||
	cr.Param[(202)]>=minskill||cr.Param[(203)]>=minskill;
}

bool _BRD(Critter&cr,int perk,int level,int,int,int)
{
	return cr.Param[(201)]>=150+level*25||cr.Param[(200)]>=150+level*25;
}

bool _Awareness(Critter&cr,int perk,int level,int,int,int)
{
	return cr.Param[(1)]>=6||cr.Param[(203)]>=100||cr.Param[(204)]>=100;
}  

bool _ProfessionCheck(Critter&cr,int perk,int level,int skill,int level1,int level2)
{
	
	if(!AssertProfessions(cr))
	return false;
	if(level==0)
	return cr.Param[skill]>=level1;
	return cr.Param[skill]>=level2;   
	
} 

import int GetFollowers(Critter&player,bool all,array<Critter@>&followers)from"follower_common";

void _SpeakerUp(Critter&cr,int perk,int level,int p0,int p1,int p2)
{
	if(level!=0)
	return;
	array<Critter@>followers;
	for(int i=0,j=GetFollowers(cr,true,followers);i<j;i++)
	((followers[i].FollowerVarBase[(941)])=(followers[i].FollowerVarBase[(941)])|((0x1)));
}

void _SpeakerDown(Critter&cr,int perk,int level,int p0,int p1,int p2)
{
	if(level!=0)
	return;
	array<Critter@>followers;
	for(int i=0,j=GetFollowers(cr,true,followers);i<j;i++)
	(followers[i].FollowerVarBase[(941)]=((followers[i].FollowerVarBase[(941)])&(~((0x1)))));
}

bool AssertProfessions(Critter&player)
{
	uint count=0;
	return count<(666);
} 

import void ChangeCrTypeSafe(Critter&cr,uint8 crType)from"utils";
void testperk(Critter&player,int perk,int,int)
{
	Critter@trainer;
	switch(perk)
	{
		case 1:
		{
			randomat(player,trainer);break;
		}
		case 2:
		{
			allstatup(player,trainer);break;
		}
		case 3:
		{
			windowupdate(player,trainer);break;
		}
		case 4:
		{
			czosnek(player,trainer);break;
		}
		case 5:
		{
			faith(player,trainer);break;
		}
		case 6:
		{
			mutant(player,trainer);break;
		}
		case 7:
		{
			deathclaw(player,trainer);break;
		}
		case 8:
		{
			hunting(player,trainer);break;
		}
		case 9:
		{
			killer(player,trainer);break;
		}
		case 10:
		{
			assasin(player,trainer);break;
		}
		default:player.Say((11),"avaible perks: 1-10");break;
	}
}

void randomfix(Critter&player,int playerid,int,int)
{
	Critter@cr=GetCritter(playerid);
	int CW=Random(1000,200000);
	cr.ParamBase[(11)]+=CW;
}
import void speedboost(Critter&cr)from"critter_item_movement";
void hunting(Critter&player,Critter@trainer)
{
	speedboost(player);
}

void killer(Critter&player,Critter@trainer)
{
	speedboost(player);
}

void assasin(Critter&player,Critter@trainer)
{
	speedboost(player);
}

void randomat(Critter&player,Critter@trainer)
{
	speedboost(player);
}

void allstatup(Critter&player,Critter@trainer)
{
	player.Say((11),"All stats up!");
	switch(Random(1,5))
	{
		case 1:
		player.ParamBase[(200)]+=50;break;
		case 2:
		player.ParamBase[(201)]+=50;break;
		case 3:
		player.ParamBase[(202)]+=50;break;
		case 4:
		player.ParamBase[(203)]+=50;break;
		case 5:
		player.ParamBase[(205)]+=50;break;
	}
	speedboost(player);
}
bool can_class(Critter&cr,Critter@trainer,int level)
{
	if(cr.Param[(395)]>0)
	return false;
	if(cr.Param[(345)]>0)
	return false;
	if(cr.Param[(384)]>0)
	return false;
	if(cr.Param[(382)]>0)
	return false;
	
	if(cr.Param[(352)]>0)
	return false;
	if(cr.Param[(353)]>0)
	return false;
	if(cr.Param[(347)]>0)
	return false;
	if(cr.Param[(404)]>0)
	return false;
	if(cr.Param[(408)]>0)
	return false;
	if(cr.Param[(441)]>0)
	return false;
	if(cr.Param[(450)]>0)
	return false;
	if(cr.Param[(418)]>0)
	return false;
	if(cr.Param[(419)]>0)
	return false;
	if(cr.Param[(357)]>0)
	return false;
	if(cr.Param[(358)]>0)
	return false;
	if(cr.Param[(359)]>0)
	return false;
	if(cr.Param[(360)]>0)
	return false;
	if(cr.Param[(393)]>0)
	return false;
	
	if(cr.Param[(77)]>=level)
	return true;
	return false;
}

void windowupdate(Critter&player,Critter@trainer)
{
	
	player.ParamBase[(212)]+=100;
	player.Say((11),"All systems update done");
	speedboost(player);
}

void czosnek(Critter&player,Critter@trainer)
{
	player.ParamBase[(79)]+=2;
	speedboost(player);
	
}

void medic(Critter&player,Critter@trainer)
{
	player.ParamBase[(206)]+=50;
	player.ParamBase[(207)]+=50;
	speedboost(player);
	
}

void leader(Critter&player,Critter@trainer)
{
	speedboost(player);
}

void faith(Critter&player,Critter@trainer)
{
	speedboost(player);
}

void mutant(Critter&player,Critter@trainer)
{
	ChangeCrTypeSafe(player,21);
	player.ParamBase[(540)]=1;
	speedboost(player);
	
}

void deathclaw(Critter&player,Critter@trainer)
{
	ChangeCrTypeSafe(player,51);
	speedboost(player);
}

void master(Critter&player,Critter@trainer)
{
	for(uint i=(__TraitBegin);i<(__TraitEnd);i++)
	player.ParamBase[i]=0; 
	
	speedboost(player);
} 

bool d_cd(Critter&player,Critter@npc)
{
	return(player.Timeout[(233)]==0);
}
void r_cd(Critter&player,Critter@trainer)
{
	player.TimeoutBase[(233)]=((__FullSecond)+(((205-player.Param[(212)])*__TimeMultiplier)));
}

void status(Critter&player,Critter@trainer)
{
	player.Say((1),""+player.Param[((180))]);
}
void uninstall(Critter&player,Critter@trainer)
{
	if(player.Param[(462)]>0){player.AddItem((22053),player.Param[(462)]);player.ParamBase[(462)]=0;}
	if(player.Param[(432)]>0){player.AddItem((22051),player.Param[(432)]);player.ParamBase[(432)]=0;}
	if(player.Param[(433)]>0){player.AddItem((22051),player.Param[(433)]);player.ParamBase[(433)]=0;}
	if(player.Param[(434)]>0){player.AddItem((22052),player.Param[(434)]);player.ParamBase[(434)]=0;}
	if(player.Param[(435)]>0){player.AddItem((22052),player.Param[(435)]);player.ParamBase[(435)]=0;}
	if(player.Param[(300)]>0){player.AddItem((25552),player.Param[(300)]);player.ParamBase[(300)]=0;}
	if(player.Param[(310)]>0){player.AddItem((25552),player.Param[(310)]);player.ParamBase[(310)]=0;}
	if(player.Param[(311)]>0){player.AddItem((25553),player.Param[(311)]);player.ParamBase[(311)]=0;}
	if(player.Param[(321)]>0){player.AddItem((25553),player.Param[(321)]);player.ParamBase[(321)]=0;}
	if(player.Param[(323)]>0){player.AddItem((25554),player.Param[(323)]);player.ParamBase[(323)]=0;}
	if(player.Param[(324)]>0){player.AddItem((25554),player.Param[(324)]);player.ParamBase[(324)]=0;}
	if(player.Param[(325)]>0){player.AddItem((25555),player.Param[(325)]);player.ParamBase[(325)]=0;}
	if(player.Param[(328)]>0){player.AddItem((25555),player.Param[(328)]);player.ParamBase[(328)]=0;}
	if(player.Param[(337)]>0){player.AddItem((25556),player.Param[(337)]);player.ParamBase[(337)]=0;}
	if(player.Param[(340)]>0){player.AddItem((25556),player.Param[(340)]);player.ParamBase[(340)]=0;}
	if(player.Param[(431)]>0){player.AddItem((1216),player.Param[(431)]);player.ParamBase[(431)]=0;}
	
}
void joke(Critter&player,Critter@trainer)
{
	switch(Random(1,100))
	{
		case 1:{player.Say((1),"My granddad has the heart of a lion and a life time ban from the San Diego Zoo.");;break;}
		case 2:{player.Say((1),"I went on a once in a lifetime holiday. Never again.");;break;}
		case 3:{player.Say((1),"Rick Astley will let you borrow any movie from his Pixar collection, except one. He’s never gonna give you Up.");;break;}
		case 4:{player.Say((1),"Two fish are sitting in a tank. One looks over at the other and says: “Hey, do you know how to drive this thing?”");;break;}
		case 5:{player.Say((1),"This is your captain speaking, AND THIS IS YOUR CAPTAIN SHOUTING.");;break;}
		case 6:{player.Say((1),"I told my doctor that I broke my arm in two places. He told me to stop going to those places.");;break;}
		case 7:{player.Say((1),"Atheism is a non-prophet organization");;break;}
		case 8:{player.Say((1),"What do you call it when Batman skips church? Christian Bale.");;break;}
		case 9:{player.Say((1),"What’s orange and sounds like a parrot? A carrot.");;break;}
		case 10:{player.Say((1),"What does the aardvark call his dog?Aard-bark! …");;break;}
		case 11:{player.Say((1),"What is the difference between an aardvark and a coyote?One has a long smeller, the other, a loud yeller! …");;break;}
		case 12:{player.Say((1),"Who loves hamburgers, French fries, and ants?Ronald MacAardvark! …");;break;}
		case 13:{player.Say((1),"What does an aardvark keep in his aquarium?An aard-shark! …");;break;}
		case 14:{player.Say((1),"It takes a lot of balls to golf like me.");;break;}
		case 15:{player.Say((1)," I asked my North Korean friend how it was there, he said he couldn’t complain.");;break;}
		case 16:{player.Say((1),"There’s no “I” in Denial.");;break;}
		case 17:{player.Say((1),"A soldier survived mustard gas in battle, and then pepper spray by the police. He’s now a seasoned veteran.");;break;}
		case 18:{player.Say((1),"What’s the best thing about Switzerland? I don’t know, but their flag is a huge plus.");;break;}
		case 19:{player.Say((1),"A Buddhist walks up to a hotdog stand and says, “Make me one with everything.”");;break;}
		case 20:{player.Say((1),"A plateau is the highest form of flattery.");;break;}
		case 21:{player.Say((1),"It’s hard to explain puns to kleptomaniacs because they always take things literally.");;break;}
		case 22:{player.Say((1),"Time flies like an arrow, fruit flies like a banana.");;break;}
		case 23:{player.Say((1),"The last thing I want to do is hurt you. But it’s still on the list.");;break;}
		case 24:{player.Say((1),"Men have two emotions: Hungry and Horny. If you see him without an erection, make him a sandwich.");;break;}
		case 25:{player.Say((1),"Having sex is like playing bridge. If you don’t have a good partner, you’d better have a good hand.");;break;}
		case 26:{player.Say((1),"Evening news is where they begin with ‘Good evening’, and then proceed to tell you why it isn’t.");;break;}
		case 27:{player.Say((1),"How do you keep an idiot in suspense?");;break;}
		case 28:{player.Say((1),"Two whales walk into a bar. The first one says, “Weeeeeooooouuuhhhh”. The next whale says, “Shut up, Steve. You’re drunk.”");;break;}
		case 29:{player.Say((1),"I hate Russian dolls…so full of themselves");;break;}
		case 30:{player.Say((1),"What’s E.T. short for? Because he’s only got little legs.");;break;}
		case 31:{player.Say((1)," “I stand corrected,” said the man in the orthopedic shoes.");;break;}
		case 32:{player.Say((1),"I’m addicted to brake fluid, but I can stop whenever I want.");;break;}
		case 33:{player.Say((1),"God must love stupid people. He made SO many.");;break;}
		case 34:{player.Say((1),"Always borrow money from a pessimist. He won’t expect it back.");;break;}
		case 35:{player.Say((1),"Money can’t buy happiness, but it sure makes misery easier to live with.");;break;}
		case 36:{player.Say((1),"I didn’t say it was your fault. I said I was blaming you.");;break;}
		case 37:{player.Say((1),"We have enough gun control. What we need is idiot control.");;break;}
		case 38:{player.Say((1),"Women will never be equal to men until they can walk down the street with a bald head and a beer gut, and still think they are sexy.");;break;}
		case 39:{player.Say((1),"War does not determine who is right. It determines who is left.");;break;}
		case 40:{player.Say((1),"Women might be able to fake orgasms. But men can fake a whole relationship.");;break;}
		case 41:{player.Say((1),"What’s the difference between my ex and the titanic? The titanic only went down on 1,000 people");;break;}
		case 42:{player.Say((1),"Why is 6 afraid of 7? Because 7 is a registered 6 offender.");;break;}
		case 43:{player.Say((1),"I used to be addicted to soap, but I’m clean now.");;break;}
		case 44:{player.Say((1),"A ragged individual stranded for several months on a small desert island in the middle of the Pacific Ocean one day noticed a bottle lying in the sand …");;break;}
		case 45:{player.Say((1),"This customer comes into the computer store. “Im looking for a mystery Adventure Game with lots of graphics. You know, something really challenging.” …");;break;}
		case 46:{player.Say((1),"Redmond, WA –Microsoft announced today that the official release date for the new operating system “Windows 2000” will be delayed until the second qu …");;break;}
		case 47:{player.Say((1),"What do computers eat when they get hungry? Chips. …");;break;}
		case 48:{player.Say((1),"Two penguins walk into a bar… which is stupid because the second one should have seen it.");;break;}
		case 49:{player.Say((1),"What do you call a magic dog? A Labracadabrador.");;break;}
		case 50:{player.Say((1),"Wanna hear a joke about Potassium? (whether they say ‘yes’ or ‘no’): K.");;break;}
		case 51:{player.Say((1),"What’s the difference between a golfer and a skydiver? A golfer goes *whack* “damn” and a skydiver goes “damn” *whack*");;break;}
		case 52:{player.Say((1),"A baby seal walks into a club.");;break;}
		case 53:{player.Say((1),"Last night me and my girlfriend watched three DVDs back to back. Luckily I was the one facing the telly.");;break;}
		case 54:{player.Say((1),"Exaggerations went up by a million percent last year.");;break;}
		case 55:{player.Say((1),"They all laughed when I said I wanted to be a comedian. Well, they’re not laughing now.");;break;}
		case 56:{player.Say((1),"Sex is not the answer. Sex is the question. “Yes” is the answer.");;break;}
		case 57:{player.Say((1),"We live in a society where pizza gets to your house faster than the police.");;break;}
		case 58:{player.Say((1),"To steal ideas from one person is plagiarism. To steal from many is research.");;break;}
		case 59:{player.Say((1),"He who smiles in a crisis has found someone to blame.");;break;}
		case 60:{player.Say((1),"I asked God for a bike, but I know God doesn’t work that way. So I stole a bike and asked for forgiveness.");;break;}
		case 61:{player.Say((1),"Some people say “If you can’t beat them, join them”. I say “If you can’t beat them, beat them”, because they will be expecting you to join them, so you will have the element of surprise.");;break;}
		case 62:{player.Say((1),"A bus station is where a bus stops. A train station is where a train stops. On my desk, I have a work station.");;break;}
		case 63:{player.Say((1),"I thought I wanted a career, turns out I just wanted paychecks.");;break;}
		case 64:{player.Say((1),"I didn’t know my dad was a construction site thief, but when I got home all the signs were there.");;break;}
		case 65:{player.Say((1),"I was wondering why does a frisbee appear larger the closer it gets…. then it hit me.");;break;}
		case 66:{player.Say((1),"Have I told you this deja vu joke before?");;break;}
		case 67:{player.Say((1),"Where do you find a cow with no legs? Right where you left it.");;break;}
		case 68:{player.Say((1),"Nostalgia isn’t what it used to be…");;break;}
		case 69:{player.Say((1),"Escalators don’t break down… they just turn into stairs");;break;}
		case 70:{player.Say((1),"“I’m sorry” and “I apologize” mean the same thing… except when you’re at a funeral.");;break;}
		case 71:{player.Say((1),"I intend to live forever… or die trying.");;break;}
		case 72:{player.Say((1),"The main reason Santa is so jolly is because he knows where all the bad girls live.");;break;}
		case 73:{player.Say((1),"Some cause happiness wherever they go. Others… whenever they go.");;break;}
		case 74:{player.Say((1),"Politicians and diapers have one thing in common. They should both be changed regularly, and for the same reason.");;break;}
		case 75:{player.Say((1),"I should’ve known it wasn’t going to work out between my ex-wife and me. After all, I’m a Libra and she’s a b!tch.");;break;}
		case 76:{player.Say((1),"I want to die peacefully in my sleep, like my grandfather… Not screaming and yelling like the passengers in his car.");;break;}
		case 77:{player.Say((1),"I saw a woman wearing a sweat shirt with “Guess” on it… So, I said “Implants?”");;break;}
		case 78:{player.Say((1),"Good girls are bad girls that never get caught.");;break;}
		case 79:{player.Say((1),"The hardest part of a business, is minding your own. …");;break;}
		case 80:{player.Say((1),"That lion king moment, when you hold your phone in the air to get a better reception…");;break;}
		case 81:{player.Say((1),"Flies only live for 24 hours. Except for the ones that get in your room. Those bastards live forever!");;break;}
		case 82:{player.Say((1),"I hate people who use big words just to make themselves look perspicacious!");;break;}
		case 83:{player.Say((1),"I get carried away sometimes… Usually because I refuse to leave!");;break;}
		case 84:{player.Say((1),"I wish more people were fluent in silence.");;break;}
		case 85:{player.Say((1),"Laugh at your problems, everybody else does.");;break;}
		case 86:{player.Say((1),"If I agreed with you, we’d both be wrong.");;break;}
		case 87:{player.Say((1),"Children: You spend the first two years of their life teaching them how to walk and talk. The next sixteen? Spent telling them to sit down and shut up.");;break;}
		case 88:{player.Say((1),"I don’t trust anything that bleeds for five days and doesn’t die.");;break;}
		case 89:{player.Say((1),"I discovered I scream the same way whether I’m about to be devoured by a great white shark or if a piece of seaweed touches my foot.");;break;}
		case 90:{player.Say((1),"My mother never realized the irony in calling me a son-of-a-bitch.");;break;}
		case 91:{player.Say((1),"How is it one careless match can start a forest fire, but it takes a whole box to start a campfire?");;break;}
		case 92:{player.Say((1),"When I die, I want my grave to have free WiFi so people will come visit more often.");;break;}
		case 93:{player.Say((1),"Were there any great men born in this town? No only little babies.");;break;}
		case 94:{player.Say((1),"A cop pulled me over and said ”Papers…” So I said, ”Scissors, I win!” and drove off like a boss.");;break;}
		case 95:{player.Say((1),"Becoming a vegetarian is a huge missed steak.");;break;}
		case 96:{player.Say((1),"Whats the difference between Windows 95 and a virus? A virus does something.");;break;}
		case 97:{player.Say((1),"What is uglier than an aardvark?Two aardvarks!");;break;}
		case 98:{player.Say((1),"We never knew he was a drunk… until he showed up to work sober");;break;}
		case 99:{player.Say((1),"A clear conscience is usually the sign of a bad memory. A blind man walks into a bar….And a table, and a chair.");;break;}
		case 100:{player.Say((1),"At what age is it appropriate to tell my dog that he’s adopted?");;break;}
	}
}
