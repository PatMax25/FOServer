                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                

int week_patch=1;
int doubleloot=1;
bool dropchance(float chance)
{
	if(chance==0)
	return false;
	if(Random(0,100)<chance)
	return true;
	
	return false;
	
}

bool can_tc_modoc=false;
bool can_tc_klamath=false;
bool can_tc_gecko=false;
bool can_tc_bh=false;
bool can_tc_redding=false;
bool can_tc_den=false;
bool can_tc_necro=false;
bool can_tc_reno=false;

uint when_tc_modoc=0;
uint when_tc_klamath=0;
uint when_tc_gecko=0;
uint when_tc_bh=0;
uint when_tc_redding=0;
uint when_tc_den=0;
uint when_tc_necro=0;
uint when_tc_reno=0;                    

uint __GetColor(int r,int g,int b,int a=0xFF)
{
	r=(((r)>(255))?(255):(((r)<(0))?(0):(r)));
	g=(((g)>(255))?(255):(((g)<(0))?(0):(g)));
	b=(((b)>(255))?(255):(((b)<(0))?(0):(b)));
	a=(((a)>(255))?(255):(((a)<(0))?(0):(a)));
	return(uint(((a)<<24)|(((r)&0xFF)<<16)|(((g)&0xFF)<<8)|((b)&0xFF)));
}                                                           

shared interface IConfigVar
{
	string GetName();
	string GetValue();
	array<string>GetValueAsArray();
	array<string>GetValueAsArray(string&delimeter);
	void SetValue(int val);
	void SetValue(uint val);
	void SetValue(string&val);
	void SetValue(array<string>&val);
	void SetValue(array<string>&val,string&delimeter);
};

shared interface IConfigSection
{
	string GetName();
	bool AddVar(string&var,string&val);
	bool DeleteVar(string&var);
	bool DeleteVar(string&var,bool caseSensitive);
	IConfigVar@GetVar(string&var);
	IConfigVar@GetVar(string&varname,bool caseSensitive);
	void GetVars(array<string>&list);
	bool SetVar(string&varname,string val);
	bool VarExists(string&var);
	bool VarExists(string&var,bool caseSensitive);
};

shared interface IConfigFile
{
	bool IsVirtual();
	string GetName();
	bool AddSection(string&section);
	IConfigSection@GetSection(string&section);
	IConfigSection@GetSection(string&sectioname,bool caseSensitive);
	void GetSections(array<string>&list);
	bool SectionExists(string&section);
	bool SectionExists(string&section,bool caseSensitive);
};  

import IConfigFile@NewConfig(string&filename)from"config_file";
import bool LoadConfig(string&filename)from"config_file";
import bool SaveConfig(string&filename)from"config_file";
import bool UnloadConfig(string&filename)from"config_file";

import IConfigFile@GetConfigFile(string&filename)from"config_file";
import IConfigFile@GetConfigFile(string&filename,bool caseSensitive)from"config_file";
import IConfigSection@GetConfigSection(string&filename,string&sectioname)from"config_file";
import IConfigSection@GetConfigSection(string&filename,string&sectioname,bool caseSensitive)from"config_file";
import IConfigVar@GetConfigVar(string&filename,string&sectioname,string@varname)from"config_file";
import IConfigVar@GetConfigVar(string&filename,string&sectioname,string@varname,bool caseSensitive)from"config_file";

import string@GetConfigValue(string&filename,string&section,string@varname)from"config_file";
import string@GetConfigValue(string&filename,string&sectioname,string@varname,bool caseSensitive)from"config_file";

import bool SetConfigValue(string&filename,string&sectioname,string@varname,string&value)from"config_file";
import bool SetConfigValue(string&filename,string&sectioname,string@varname,bool value)from"config_file";
import bool SetConfigValue(string&filename,string&sectioname,string@varname,int value)from"config_file";
import bool SetConfigValue(string&filename,string&sectioname,string@varname,uint value)from"config_file";            

import uint COLOR_RGB_STRING(string&r,string&g,string&b)from"client_utils";
import uint COLOR_RGBA_STRING(string&r,string&g,string&b,string&a)from"client_utils";
import void COLOR_RGB_UNPACK(uint color,uint8&r,uint8&g,uint8&b)from"client_utils";
import void COLOR_RGB_UNPACK(uint color,uint8&r,uint8&g,uint8&b,uint8&a)from"client_utils";

import string RandomString(uint8 length)from"client_utils";

import bool string2bool(string@text)from"client_utils";
import uint string2uint(string@text)from"client_utils";
import uint rgb_string2uint(string&text)from"client_utils";
import uint rgba_string2uint(string&text)from"client_utils";

import int string2int(string&text)from"client_utils";
import uint font_string2uint(string&text)from"client_utils";
import uint range_string2int(string&text,int&from,int&to)from"client_utils";
import uint range_string2uint(string&text,uint&from,uint&to)from"client_utils";
import void vis_string2bool(string&text,bool&head,bool&msgbox)from"client_utils";           

import bool StrToInt(string@s,uint64&inout val)from"strtoint";
import bool StrToInt(string@s,uint&inout val)from"strtoint";
import bool StrToInt(string@s,uint16&inout val)from"strtoint";
import bool StrToInt(string@s,uint8&inout val)from"strtoint";
import bool StrToInt(string@s,int64&inout val)from"strtoint";
import bool StrToInt(string@s,int16&inout val)from"strtoint";
import bool StrToInt(string@s,int8&inout val)from"strtoint";            

class CTimeout
{
	bool Enabled;
	uint Direction;
	int PositionX;
	int PositionY;
	uint SpacingX;
	uint SpacingY;
	uint NameColor;
	uint ValueColor;
	uint Alpha;
	uint Font;
	uint FontFlags;
	bool Worldmap;
	int WorldmapX;
	int WorldmapY;
	uint TimeFormat;        
	
	array<string>Ini;
	
	CTimeout()
	{
		this.Enabled=true;
		this.Direction=1;
		this.PositionX=-165;
		this.PositionY=-110;
		this.SpacingX=100;
		this.SpacingY=10;
		this.NameColor=(uint((0xFF<<24)|(((0)&0xFF)<<16)|(((255)&0xFF)<<8)|((0)&0xFF)));
		this.ValueColor=(uint((0xFF<<24)|(((0)&0xFF)<<16)|(((255)&0xFF)<<8)|((0)&0xFF)));
		this.Alpha=0;
		this.Font=(5);
		this.FontFlags=0;
		this.Worldmap=false;
		this.WorldmapX=-145;
		this.WorldmapY=-110;
		this.TimeFormat=0;
	}
};
CTimeout Timeouts;

class CTimeoutCustom
{
	int PositionX;
	int PositionY;
	uint SpacingX;
	uint NameColor;
	uint ValueColor;
	uint Alpha;
	uint Font;
	bool ShowLabel;
	int CustomMode;
	
	CTimeoutCustom()
	{
		this.PositionX=0;
		this.PositionY=0;
		this.SpacingX=100;
		this.NameColor=(uint((0xFF<<24)|(((0)&0xFF)<<16)|(((255)&0xFF)<<8)|((0)&0xFF)));
		this.ValueColor=(uint((0xFF<<24)|(((0)&0xFF)<<16)|(((255)&0xFF)<<8)|((0)&0xFF)));
		this.Font=(5);
		this.Alpha=0;
		this.ShowLabel=true;
		this.CustomMode=0;
	}
	
	void SetValues(int x,int y,uint sx,uint8 nR,uint8 nG,uint8 nB,uint8 vR,uint8 vG,uint8 vB,uint8 f,bool sl)
	{
		this.PositionX=x;
		this.PositionY=y;
		this.SpacingX=sx;
		this.NameColor=(uint((0xFF<<24)|(((nR)&0xFF)<<16)|(((nG)&0xFF)<<8)|((nB)&0xFF)));
		this.ValueColor=(uint((0xFF<<24)|(((vR)&0xFF)<<16)|(((vG)&0xFF)<<8)|((vB)&0xFF)));
		this.Font=f;
		this.ShowLabel=sl;
		this.CustomMode=1;
	}
	
	void SetValues(uint8 nR,uint8 nG,uint8 nB,uint8 vR,uint8 vG,uint8 vB)
	{
		this.NameColor=(uint((0xFF<<24)|(((nR)&0xFF)<<16)|(((nG)&0xFF)<<8)|((nB)&0xFF)));
		this.ValueColor=(uint((0xFF<<24)|(((vR)&0xFF)<<16)|(((vG)&0xFF)<<8)|((vB)&0xFF)));
		this.CustomMode=2;
	}
};
array<CTimeoutCustom>TimeoutsCustom; 

class MyTimeout
{
	string name;
	uint value;
	uint tick;
	
	MyTimeout(string name,uint value,uint tick)
	{
		this.name=name;
		this.value=value;
		this.tick=tick;
	}
};
array<MyTimeout>MyTimeouts;  

void TimeoutsConfig(string&customConfig)
{
	
	for(uint8 i=0;i<30;++i)
	{
		TimeoutsCustom.insertLast(CTimeoutCustom());
	}
	
	string sectioname=(customConfig==""?"Timeouts":"Timeouts"+":"+customConfig);
	
	IConfigSection@section=GetConfigSection("FOnlineAT.cfg",sectioname);
	
	if((@section!=null))
	{
		array<string>vars;
		section.GetVars(vars);
		
		if(vars.length()==0)
		return;
		
		for(uint v=0;v<vars.length();v++)
		{
			IConfigVar@var=section.GetVar(vars[v]);
			if(!(@var!=null))
			continue;
			
			if(var.GetName()=="Enabled")
			Timeouts.Enabled=string2bool(var.GetValue());
			else if(var.GetName()=="Direction")
			Timeouts.Direction=string2uint(var.GetValue());
			else if(var.GetName()=="PositionX")
			Timeouts.PositionX=string2int(var.GetValue());
			else if(var.GetName()=="PositionY")
			Timeouts.PositionY=string2int(var.GetValue());
			else if(var.GetName()=="SpacingX")
			Timeouts.SpacingX=string2uint(var.GetValue());
			else if(var.GetName()=="SpacingY")
			Timeouts.SpacingY=string2uint(var.GetValue());
			else if(var.GetName()=="NameColor")
			Timeouts.NameColor=rgb_string2uint(var.GetValue());
			else if(var.GetName()=="ValueColor")
			Timeouts.ValueColor=rgb_string2uint(var.GetValue());
			else if(var.GetName()=="Font")
			Timeouts.Font=font_string2uint(var.GetValue());  
			
			else if(var.GetName()=="Transparency")
			{
				Timeouts.Alpha=(((string2uint(var.GetValue()))>(100))?(100):(((string2uint(var.GetValue()))<(0))?(0):(string2uint(var.GetValue()))));
				if(Timeouts.Alpha>0)
				Timeouts.Alpha=(255*(100-Timeouts.Alpha))/100;
			}
			else if(var.GetName()=="Worldmap")
			Timeouts.Worldmap=string2bool(var.GetValue());
			else if(var.GetName()=="WorldmapX")
			Timeouts.WorldmapX=string2int(var.GetValue());
			else if(var.GetName()=="WorldmapY")
			Timeouts.WorldmapY=string2int(var.GetValue());
			else if(var.GetName()=="TimeFormat")
			Timeouts.TimeFormat=(((string2uint(var.GetValue()))>(7))?(7):(((string2uint(var.GetValue()))<(0))?(0):(string2uint(var.GetValue()))));
			else
			{
				for(uint i=1;i<30;++i)
				{
					if(var.GetName()==("CustomTimeout"+i))
					{
						array<string@>@vals=split(var.GetValue()," ");
						if(vals.length()==11)
						TimeoutsCustom[i].SetValues(string2int(vals[0]),string2int(vals[1]),string2uint(vals[2]),
						string2uint(vals[3]),string2uint(vals[4]),string2uint(vals[5]),
						string2uint(vals[6]),string2uint(vals[7]),string2uint(vals[8]),
						string2uint(vals[9]),string2bool(vals[10]));
						else if(vals.length()==6)
						TimeoutsCustom[i].SetValues(string2uint(vals[0]),string2uint(vals[1]),string2uint(vals[2]),
						string2uint(vals[3]),string2uint(vals[4]),string2uint(vals[5]));
						break;
					}
				}
			}
		}
		
	}
}     

int screen_timeouts_draw(CritterCl&critter,uint skill,string&skillname,int x,int y,uint z,uint userCustomMode)
{
	
	return(screen_timeouts_draw(critter,skill,skillname,x,y,false,z,userCustomMode));
}

int screen_timeouts_draw(CritterCl&critter,uint skill,string&skillname,int x,int y,bool custom,uint z,uint userCustomMode)
{
	if(GetCurrentMapPid()==0&&userCustomMode==1)
	userCustomMode=2; 
	
	int timeout;
	
	if(custom)
	timeout=__TimeMultiplier*skill;
	else
	
	timeout=critter.Timeout[skill];
	
	timeout/=__TimeMultiplier; 
	
	if(!custom)
	timeout+=1;
	
	if(timeout>0)
	{
		string text="";
		
		if(timeout>=3153600)
		{
			int y=timeout/3153600;
			timeout-=y*3153600;
			text+=y+" year"+(y==1?"":"s");
		}
		else if(timeout>=2419200)
		{
			int m=timeout/2419200;
			timeout-=m*2419200;
			text+=m+" month"+(m==1?"":"s");
		}
		else if(timeout>=604800)
		{
			int w=timeout/604800;
			timeout-=w*604800;
			text+=w+" week"+(w==1?"":"s");
		}
		else if(timeout>=86400)
		{
			int d=timeout/86400;
			timeout-=d*86400;
			text+=d+" day"+(d==1?"":"s");
		}
		else if(timeout>=3600)
		{
			int h=timeout/3600;
			timeout-=h*3600;
			int m=timeout/60;
			timeout-=m*60;
			
			if(Timeouts.TimeFormat<6)
			{
				text+=h+":";
				text+=((m<10)?("0"+m):(""+m))+":";
				text+=((timeout<10)?("0"+timeout):(""+timeout));
			}
			else
			{
				text+=h+"h ";
				text+=m+((Timeouts.TimeFormat==6)?"m ":" min ");
				text+=timeout+((Timeouts.TimeFormat==6)?"s":" sec");
			}
		}
		else if(timeout>=60)
		{
			int m=timeout/60;
			timeout-=m*60;
			
			if(Timeouts.TimeFormat<5)
			text+=m+":"+((timeout<10)?("0"+timeout):(""+timeout));
			else if(Timeouts.TimeFormat==5)
			{
				text+=((m<10)?("0"+m):(""+m))+":";
				text+=((timeout<10)?("0"+timeout):(""+timeout));
			}
			else
			{
				text+=m+((Timeouts.TimeFormat==6)?"m ":" min ");
				text+=timeout+((Timeouts.TimeFormat==6)?"s":" sec");
			}
		}
		else
		{
			switch(Timeouts.TimeFormat)
			{
				case 0:text+=timeout;break;
				case 1:text+=timeout+"s";break;
				case 2:text+=timeout+" sec";break;
				case 3:text+=timeout+" seconds";break;
				case 4:text+="0:"+((timeout<10)?("0"+timeout):(""+timeout));break;
				case 5:text+="00:"+((timeout<10)?("0"+timeout):(""+timeout));break;
				case 6:text+=timeout+"s";break;
				case 7:text+=timeout+" sec";break;
			}
		}
		
		int yy=y;
		if(userCustomMode==1)
		{
			x=TimeoutsCustom[z].PositionX;
			y=TimeoutsCustom[z].PositionY;
		}
		
		if(x<0)
		x+=__ScreenWidth;
		if(y<0)
		y+=__ScreenHeight;
		if(yy<0)
		yy+=__ScreenHeight;
		
		int color1=(userCustomMode!=0)?TimeoutsCustom[z].NameColor:Timeouts.NameColor;
		int color2=(userCustomMode!=0)?TimeoutsCustom[z].ValueColor:Timeouts.ValueColor;
		
		if(((skillname=="Gathering"&&timeout<=(20*60))||
		(skillname=="Crafting"&&timeout<=(60*60)))&&
		(Timeouts.Alpha!=0))
		{
			color1=((((Timeouts.NameColor)|0xFF000000)^0xFF000000)|((Timeouts.Alpha)&0xFF)<<24);
			color2=((((Timeouts.ValueColor)|0xFF000000)^0xFF000000)|((Timeouts.Alpha)&0xFF)<<24);
		}
		
		if(userCustomMode==1)
		{
			if(TimeoutsCustom[z].ShowLabel)
			{
				DrawText(skillname+":",x,y,__ScreenWidth,10,color1,TimeoutsCustom[z].Font,Timeouts.FontFlags);
				x+=TimeoutsCustom[z].SpacingX;
			}
			DrawText(text,x,y,__ScreenWidth,10,color2,TimeoutsCustom[z].Font,Timeouts.FontFlags);
			y=yy;
		}
		else
		{
			DrawText(skillname+":",x,y,__ScreenWidth,10,color1,Timeouts.Font,Timeouts.FontFlags);
			x+=Timeouts.SpacingX;
			DrawText(text,x,y,__ScreenWidth,10,color2,Timeouts.Font,Timeouts.FontFlags);
			
			if(Timeouts.Direction==0)
			y+=Timeouts.SpacingY;
			else
			y-=Timeouts.SpacingY;
		}
	}
	return(y);
}

void TimeoutsDraw()
{
	CritterCl@critter=GetChosen();
	if(!(@critter!=null))
	return;
	
	if(!Timeouts.Enabled)
	return;
	
	if(GetCurrentMapPid()==0&&!Timeouts.Worldmap)
	return;
	
	int x=0;
	int y=0;
	
	if(GetCurrentMapPid()==0)
	{
		x=Timeouts.WorldmapX;
		y=Timeouts.WorldmapY;
	}
	else
	{
		x=Timeouts.PositionX;
		y=Timeouts.PositionY;
	}
	
	bool goUp=Timeouts.Direction==0; 
	
	if(MyTimeouts.length()>0)
	{
		for(uint c=0;c<MyTimeouts.length();c++)
		{
			if(MyTimeouts[c].value>0)
			{
				if(GetTick()-MyTimeouts[c].tick>=1000)
				{
					MyTimeouts[c].value--;
					if(MyTimeouts[c].value==0)
					{  
						
						MyTimeouts.removeAt(c);  
						
						break;
					}
					MyTimeouts[c].tick=GetTick();
				}
				y=screen_timeouts_draw(critter,MyTimeouts[c].value,MyTimeouts[c].name,x,y,true,0,0);
			}
		}
	} 
	
	for(uint z=(goUp?1:26);z!=(goUp?27:0);(goUp?z++:z--))
	{   
		
		if(z==1&&critter.Param[(241)]>0)
		{
			y=screen_timeouts_draw(critter,(241),"Replication",x,y,z,TimeoutsCustom[z].CustomMode);
		}
		if(z==2&&critter.Param[(238)]>0&&!IsTurnBased())
		{
			y=screen_timeouts_draw(critter,(238),"Battle",x,y,z,TimeoutsCustom[z].CustomMode);
		}
		if(z==3&&critter.Param[(798)]>0)
		{
			y=screen_timeouts_draw(critter,(798),"Engineering",x,y,z,TimeoutsCustom[z].CustomMode);
		}
		if(z==4&&critter.Param[(234)]>0)
		{
			y=screen_timeouts_draw(critter,(234),"Robbery",x,y,z,TimeoutsCustom[z].CustomMode);
		}
		if(z==5&&critter.Param[(233)]>0)
		{
			y=screen_timeouts_draw(critter,(233),"Science",x,y,z,TimeoutsCustom[z].CustomMode);
		}
		if(z==6&&critter.Param[(232)]>0)
		{
			y=screen_timeouts_draw(critter,(232),"Repair",x,y,z,TimeoutsCustom[z].CustomMode);
		}
		if(z==7&&critter.Param[(231)]>0)
		{
			y=screen_timeouts_draw(critter,(231),"Doctor",x,y,z,TimeoutsCustom[z].CustomMode);
		}
		if(z==8&&critter.Param[(230)]>0)
		{
			y=screen_timeouts_draw(critter,(230),"First Aid",x,y,z,TimeoutsCustom[z].CustomMode);
		}
		if(z==9&&critter.Param[(246)]>0)
		{
			y=screen_timeouts_draw(critter,(246),(critter.Trait[(562)]!=0?"Eye":"Cigarettes"),x,y,z,TimeoutsCustom[z].CustomMode);
		}
		if(z==10&&critter.Param[(247)]>0)
		{
			y=screen_timeouts_draw(critter,(247),(critter.Trait[(562)]!=0?"Ear":"Nuka Cola"),x,y,z,TimeoutsCustom[z].CustomMode);
		}
		if(z==11&&critter.Param[(248)]>0)
		{
			y=screen_timeouts_draw(critter,(248),"Beer",x,y,z,TimeoutsCustom[z].CustomMode);
		}
		if(z==12&&critter.Param[(253)]>0)
		{
			y=screen_timeouts_draw(critter,(253),"Mentats",x,y,z,TimeoutsCustom[z].CustomMode);
		}
		if(z==13&&critter.Param[(254)]>0)
		{
			y=screen_timeouts_draw(critter,(254),(critter.Trait[(562)]!=0?"Heart":"Buffout"),x,y,z,TimeoutsCustom[z].CustomMode);
		}
		if(z==14&&critter.Param[(250)]>0)
		{
			y=screen_timeouts_draw(critter,(250),(critter.Trait[(562)]!=0?"Brain":"Psycho"),x,y,z,TimeoutsCustom[z].CustomMode);
		}
		if(z==15&&critter.Param[(251)]>0)
		{
			y=screen_timeouts_draw(critter,(251),(critter.Trait[(562)]!=0?"Liver":"Jet"),x,y,z,TimeoutsCustom[z].CustomMode);
		}
		if(z==16&&critter.Param[(255)]>0)
		{
			y=screen_timeouts_draw(critter,(255),"RadAway",x,y,z,TimeoutsCustom[z].CustomMode);
		}
		if(z==17&&critter.Param[(256)]>0)
		{
			y=screen_timeouts_draw(critter,(256),"Rad-X",x,y,z,TimeoutsCustom[z].CustomMode);
		}
		if(z==18&&critter.Param[(236)]>0)
		{
			y=screen_timeouts_draw(critter,(236),"H.Powder",x,y,z,TimeoutsCustom[z].CustomMode);
		}
		if(z==19&&critter.Param[(237)]>0)
		{
			y=screen_timeouts_draw(critter,(237),"Roentgen",x,y,z,TimeoutsCustom[z].CustomMode);
		}
		if(z==20&&critter.Param[(243)]>0)
		{
			y=screen_timeouts_draw(critter,(243),"Rot Gut",x,y,z,TimeoutsCustom[z].CustomMode);
		}
		if(z==21&&critter.Param[(257)]>0)
		{
			y=screen_timeouts_draw(critter,(257),"AB Gum",x,y,z,TimeoutsCustom[z].CustomMode);
		}
		if(z==22&&critter.Param[(240)]>0)
		{
			y=screen_timeouts_draw(critter,(240),"Mutie",x,y,z,TimeoutsCustom[z].CustomMode);
		}
		if(z==23&&critter.Param[(235)]>0)
		{
			y=screen_timeouts_draw(critter,(235),"Voodoo",x,y,z,TimeoutsCustom[z].CustomMode);
		}
		if(z==24&&critter.Param[(258)]>0)
		{
			y=screen_timeouts_draw(critter,(258),"Booze",x,y,z,TimeoutsCustom[z].CustomMode);
		}
		if(z==25&&critter.Param[(259)]>0)
		{
			y=screen_timeouts_draw(critter,(259),"Gamma Gulp",x,y,z,TimeoutsCustom[z].CustomMode);
		}
		if(z==26&&critter.Param[(242)]>0)
		{
			if(critter.Param[(441)]>0)
			y=screen_timeouts_draw(critter,(242),"Flag",x,y,z,TimeoutsCustom[z].CustomMode);
			else y=screen_timeouts_draw(critter,(242),"Stealth Boy",x,y,z,TimeoutsCustom[z].CustomMode);
		}
	}
}

bool TimeoutsCommand(string&message)
{
	array<string@>@options=split(message," ");
	if(message=="~timeouts"||options[1]=="")
	{
		Timeouts.Enabled=!Timeouts.Enabled;
		Message("Timeouts display: "+(Timeouts.Enabled?"ON":"OFF"));
		return(false);
	}        
	
	else if(options[1]=="load")
	{
		if(options.length()==2)
		TimeoutsConfig("");
		else if(options.length()==3&&options[2]!="")
		TimeoutsConfig(options[2]);
	}
	if(!Timeouts.Enabled)
	return(false);
	
	if(options[1]=="color")
	{
		if((options[2].length()+options[3].length()+options[4].length())>=3)
		{
			Timeouts.NameColor=COLOR_RGB_STRING(options[2],options[3],options[4]);
			Timeouts.ValueColor=COLOR_RGB_STRING(options[2],options[3],options[4]);
		}
	}
	else if(options[1]=="color1")
	{
		if((options[2].length()+options[3].length()+options[4].length())>=3)
		Timeouts.NameColor=COLOR_RGB_STRING(options[2],options[3],options[4]);
	}
	else if(options[1]=="color2")
	{
		if((options[2].length()+options[3].length()+options[4].length())>=3)
		Timeouts.ValueColor=COLOR_RGB_STRING(options[2],options[3],options[4]);
	}
	else if(options[1]=="direction"&&options[2].length()>0)
	{
		if(options[2]=="up")
		Timeouts.Direction=1;
		else if(options[2]=="down")
		Timeouts.Direction=0;
	}
	else if(options[1]=="font")
	{
		if(options[2].length()>=1)
		{
			uint font=0;
			StrToInt(options[2],font);
			
			Timeouts.Font=font_string2uint(options[2]);
			if(font!=Timeouts.Font)
			{
				Message("Timeouts [font]: invalid font ("+font+")");
				return(false);
			}
			;
		}
		;
	}
	else if(options[1]=="spacingx")
	{
		if(options[2].length()>=1)
		StrToInt(options[2],Timeouts.SpacingX);
	}
	else if(options[1]=="spacingy")
	{
		if(options[2].length()>=1)
		{
			StrToInt(options[2],Timeouts.SpacingY);
		}
	}
	else if(options[1]=="wm"||options[1]=="worldmap")
	{
		Timeouts.Worldmap=!Timeouts.Worldmap;
	}
	else if(options[1]=="xy")
	{
		if(options.length()>=4&&(options[2].length()>0)&&(options[3].length()>0))
		{
			StrToInt(options[2],Timeouts.PositionX);
			StrToInt(options[3],Timeouts.PositionY);
		}
	}
	else if(options[1]=="worldmapxy")
	{
		if(options.length()>=4&&(options[2].length()>=1)&&(options[3].length()>=1))
		{
			StrToInt(options[2],Timeouts.WorldmapX);
			StrToInt(options[3],Timeouts.WorldmapY);
		}
	} 
	
	else if(options[1]=="0x1337"&&options.length()>=4&&options[2].length()>0&&options[3].length()>0)
	{
		int val=0;
		StrToInt(options[3],val);
		screen_timeouts_add(options[2],val);
	}
	;
	
	return(false);
}; 

void screen_timeouts_add(string&name,int value)
{
	screen_timeouts_add(name,value,GetTick());
}

void screen_timeouts_add(string&name,int value,int tick)
{
	if(value<=0)
	return;
	
	if(MyTimeouts.length()>0)
	{
		for(uint c=0;c<MyTimeouts.length();c++)
		{
			if(MyTimeouts[c].name==name)
			{   
				
				MyTimeouts[c].value=value;
				MyTimeouts[c].tick=tick;
				return;
			}
		}
	}
	MyTimeouts.insertLast(MyTimeout(name,value,tick));   
	
};

void _add_unsafe(int value,int,int,string@name,array<int>@)
{
	if((@name!=null)&&name!=""&&value>0)
	screen_timeouts_add(name,value);
	
	return;
};         

