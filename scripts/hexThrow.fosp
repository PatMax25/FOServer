

int week_patch=1;
int doubleloot=1;
bool dropchance(float chance)
{
	if(chance==0)
	return false;
	if(Random(0,100)<chance)
	return true;
	
	return false;
	
}

bool can_tc_modoc=false;
bool can_tc_klamath=false;
bool can_tc_gecko=false;
bool can_tc_bh=false;
bool can_tc_redding=false;
bool can_tc_den=false;
bool can_tc_necro=false;
bool can_tc_reno=false;

uint when_tc_modoc=0;
uint when_tc_klamath=0;
uint when_tc_gecko=0;
uint when_tc_bh=0;
uint when_tc_redding=0;
uint when_tc_den=0;
uint when_tc_necro=0;
uint when_tc_reno

import bool IsArenaItem(Item@item)from"arena";
import bool IsInsideArena(Critter&cr)from"arena";
import bool IsInsideArena(uint16 x,uint16 y)from"arena";            

bool IsHexThrowingWeapon(Item@item)
{
	if(!(@item!=null))
	return false;
	if(item.GetType()!=(3))
	return false;
	uint8 use=((item.Mode)&0xF);
	return((use)==0?item.Proto.Weapon_Skill_0:((use)==1?item.Proto.Weapon_Skill_1:((use)==2?item.Proto.Weapon_Skill_2:0)))==(205);
}

uint HexThrowGetMaxRange(Critter&cr,Item@item)
{
	if(!(@item!=null))
	return 0;
	
	uint bonus=6*(cr.Param[(336)]);
	uint max=0;
	max=5+cr.Param[(0)];
	max+=6*(cr.Param[(336)]);
	if(cr.Param[(336)]>0&&cr.Param[(315)]>0)
	max+=5;
	if(IsGrenade(item))
	{
		uint8 use=((item.Mode)&0xF);
		return max;
	}
	else
	{
		return 0;
	}
}

bool IsHexThrowable(ProtoItem&weapon)
{
	if(!(@weapon!=null))
	false;
	return!(weapon.Type==(3)&&weapon.Weapon_IsUnarmed);
}

int HexThrowingToHit(Critter&cr,uint16 tx,uint16 ty,ProtoItem&weapon)
{
	if(!(@weapon!=null))
	return 0;
	if(weapon.Type==(3)&&weapon.Weapon_IsUnarmed)
	return 0;
	if(!cr.IsLife())
	return 0;
	
	int dist=GetDistantion(cr.HexX,cr.HexY,tx,ty);
	
	int toHit=int(cr.Param[(205)]);
	int weaponPerk=weapon.Weapon_Perk;
	int blockers=0;  
	
	int distmod1=2;
	int distmod2=0;
	
	int perception=cr.Param[(1)];
	int acc=dist;
	
	if(dist<distmod2)
	acc+=distmod2;
	else
	{
		if(cr.IsPlayer())
		acc-=(perception-2)*distmod1;
		else
		acc-=perception*distmod1;
	}
	
	if(-2*perception>acc)
	acc=-2*perception;
	
	acc-=2*cr.Param[(315)];
	
	if(acc>=0)
	{
		if(cr.Damage[(502)]!=0)
		acc*=-12;
		else
		acc*=-4;
	}
	else
	acc*=-4;
	
	toHit+=acc; 
	
	Map@map=cr.GetMap();
	blockers=map.GetCrittersPath(cr.HexX,cr.HexY,tx,ty,0.0f,dist,(0x01),null);    
	
	toHit-=10*blockers;
	
	if(cr.Damage[(502)]!=0)
	toHit-=25;
	toHit=(((toHit)>(95))?(95):(((toHit)<(5))?(5):(toHit)));
	
	return toHit;
}

int HexThrowActionPointsCost(Item&item,Critter&cr)
{
	if(IsGrenade(item))
	{
		uint8 use=((item.Mode)&0xF);
		int apCost=(cr.Param[(306)]>0)?-1:0;
		apCost+=((use)==0?item.Proto.Weapon_ApCost_0:((use)==1?item.Proto.Weapon_ApCost_1:((use)==2?item.Proto.Weapon_ApCost_2:0)));
		apCost-=cr.Param[(395)];
		
		return apCost;
	}
	return 0;
}

bool IsHexThrowableThere(Critter&cr,Item@item,uint16 tx,uint16 ty)
{
	if(!(@item!=null)||!IsHexThrowable(item.Proto)||!cr.IsLife())
	return false;
	
	if(cr.Param[(75)]<HexThrowActionPointsCost(item,cr))
	return false;
	if(HexThrowActionPointsCost(item,cr)==0)
	return false;
	
	if(cr.Damage[(503)]!=0&&cr.Damage[(504)]!=0)
	return false;
	if(HexThrowGetMaxRange(cr,item)==0||GetDistantion(cr.HexX,cr.HexY,tx,ty)==0)
	return false; 
	
	uint16 pbx=tx;
	uint16 pby=ty;
	uint16 bx=tx;
	uint16 by=ty; 
	
	Map@map=cr.GetMap();
	map.GetCrittersPath(cr.HexX,cr.HexY,tx,ty,0.0f,0,0,null,pbx,pby,bx,by);    
	
	if(bx!=tx||by!=ty)
	return false; 
	
	return HexThrowGetMaxRange(cr,item)>=GetDistantion(cr.HexX,cr.HexY,tx,ty);
	
}

bool IsGrenade(Item&item)
{
	switch(item.Proto.ProtoId)
	{
		case(1834):
		case(159):
		case(26):
		case(25):
		case(421):
		case(27):
		case(25570):
		case(9675):
		return true;
		
	}
	return false;
}  

import void CommenceExplosionHexEx(Critter@attacker,Map@map,uint16 tx,uint16 ty,Critter@target,uint weapPid,Item@usedWeapon,uint ammoPid,bool isCritical,uint intentionallyId,bool isRocket,bool isExplodeRocket)from"combat";

void unsafe_HexThrow(Critter&player,int px,int py,int p2,string@param3,array<int>@param4)
{
	if(player.Param[(357)]>0||player.Param[(359)]>0)
	{
		
		player.Say((11),"Can't use it");
		return;
	}
	if(!player.IsLife())
	{
		player.RunClientScript("hexThrow@_UpdateWeapons",0,0,0,null,null);
		return;
	}
	Map@map=player.GetMap();
	if(!(@map!=null))
	{
		player.RunClientScript("hexThrow@_UpdateWeapons",0,0,0,null,null);
		return;
	}
	if(px<0||px>=int(map.GetWidth())||py<0||py>=int(map.GetHeight()))
	{
		player.RunClientScript("hexThrow@_UpdateWeapons",0,0,0,null,null);
		return;
	}
	
	Item@item=player.GetItemById(p2);
	if(!IsHexThrowableThere(player,item,px,py))
	{
		player.RunClientScript("hexThrow@_UpdateWeapons",0,0,0,null,null);
		return;
	}
	
	uint16 tx=px;
	uint16 ty=py; 
	
	uint16 pbx=tx;
	uint16 pby=ty;
	uint16 bx=tx;
	uint16 by=ty;
	if(IsGrenade(item))
	{
		map.GetCrittersPath(player.HexX,player.HexY,tx,ty,0.0f,0,(0x03),null,pbx,pby,bx,by);
		tx=pbx;
		ty=pby;
	}
	else
	{
		player.RunClientScript("hexThrow@_UpdateWeapons",0,0,0,null,null);
		return;
	}
	
	int tohit=HexThrowingToHit(player,tx,ty,item.Proto);
	if(tohit>=Random(1,100))
	{
		CommenceHexThrowing(player,map,item,tx,ty);
	}
	else
	{
		uint dist=GetDistantion(player.HexX,player.HexY,tx,ty)+1;
		map.MoveHexByDir(tx,ty,Random(0,5),Random(1,dist/2));
		map.GetCrittersPath(player.HexX,player.HexY,tx,ty,0.0f,0,(0x03),null,pbx,pby,bx,by);
		tx=pbx;
		ty=pby;
		CommenceHexThrowing(player,map,item,tx,ty);
		player.Say((11),"You missed.");
	}
	
}

void CommenceHexThrowing(Critter&cr,Map&map,Item&item,uint16 tx,uint16 ty)
{
	uint16 pid=item.GetProtoId();
	if(IsGrenade(item))
	{
		uint8 dir=GetDirection(cr.HexX,cr.HexY,tx,ty);
		cr.SetDir(dir);
		cr.Animate(0,(53),null,true,true);
		if(cr.Param[(510)]!=0)
		{
			if(!cr.IsPlayer()||cr.GetAccess()==(0))
			cr.ParamBase[(510)]=0;
		}
		cr.Wait(__Breaktime);
		cr.ParamBase[(75)]-=100*HexThrowActionPointsCost(item,cr);
		
		map.RunFlyEffect(item.GetProtoId(),cr,null,cr.HexX,cr.HexY,tx,ty);
		
		if(cr.Timeout[(238)]<int(__TimeoutBattle))
		cr.TimeoutBase[(238)]=((__FullSecond)+(__TimeoutBattle));
		if(!map.IsTurnBased()&&map.IsTurnBasedAvailability())
		map.BeginTurnBased(cr);
		if(!IsArenaItem(item)||(IsInsideArena(cr)&&IsInsideArena(tx,ty)))
		{
			uint[]values={map.Id,tx,ty,pid,cr.Id};
			
			e_HexThrowExplode(values);
		}
		cr.DeleteItem(item.GetProtoId(),1);
	}
	else
	{
		cr.RunClientScript("hexThrow@_UpdateWeapons",0,0,0,null,null);
		return;
	}
}

uint e_HexThrowExplode(array<uint>@values)
{
	Map@map=GetMap(values[0]);
	Critter@cr=GetCritter(values[4]);
	if(!(@map!=null))
	{
		cr.RunClientScript("hexThrow@_UpdateWeapons",0,0,0,null,null);
		return 0;
	}
	
	Item@usedWeapon=cr.GetItem(values[3],-1);
	
	CommenceExplosionHexEx(GetCritter(values[4]),map,values[1],values[2],null,values[3],usedWeapon,0,false,0,false,false);
	cr.RunClientScript("hexThrow@_UpdateWeapons",0,0,0,null,null);
	return 0;
}                                                                                                                                                                                                                                                                                                                                                                                                                        

